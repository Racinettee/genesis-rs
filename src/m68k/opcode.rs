use std::fmt::{Display, Formatter, Result};

use super::arch;

// Structure and data referenced from
// https://chromium.googlesource.com/native_client/nacl-gdb/+/refs/heads/main/opcodes/m68k-opc.c
#[derive(Copy, Clone, Debug)]
pub struct OpCode {
    name: &'static str,
    args: &'static str,
    opcode: u32,
    mask: u32,
    arch: u32,
    size: u16,
}

impl Display for OpCode {
    fn fmt(&self, f: &mut Formatter) -> Result {
        write!(f, "{}: {}, {:#04X}, mask: {:#04X} size: {} arch: {}", self.name, self.args, self.opcode, self.mask, self.size, self.arch)
    }
}

const fn one(x: u32) -> u32 {
    x << 16
}

const fn two(x: u32, y: u32) -> u32 {
    (x << 16) + y
}

const SCOPE_LINE: u32 = 0x1 << 3;
const SCOPE_PAGE: u32 = 0x2 << 3;
const SCOPE_ALL: u32 = 0x3 << 3;

pub static OP_CODES: &[OpCode] = &[
    OpCode{name: "abcd", size: 2, opcode: one(0140400), mask: one(0170770), args: "DsDd", arch: arch::M68000UP},
    OpCode{name: "abcd", size: 2, opcode: one(0140410), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},

    OpCode{name: "addaw", size: 2, opcode: one(0150300), mask: one(0170700), args: "*wAd", arch: arch::M68000UP},
    OpCode{name: "addal", size: 2, opcode: one(0150700), mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "addib", size: 4, opcode: one(0003000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "addiw", size: 4, opcode: one(0003100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "addil", size: 6, opcode: one(0003200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "addil", size: 6, opcode: one(0003200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},

    OpCode{name: "addqb", size: 2, opcode: one(0050000), mask: one(0170700), args: "Qd$b", arch: arch::M68000UP},
    OpCode{name: "addqw", size: 2, opcode: one(0050100), mask: one(0170700), args: "Qd%w", arch: arch::M68000UP},
    OpCode{name: "addql", size: 2, opcode: one(0050200), mask: one(0170700), args: "Qd%l", arch: arch::M68000UP | arch::MCFISA_A},

    // The add opcode can generate the adda, addi, and addq instructions.
    OpCode{name: "addb", size: 2, opcode: one(0050000), mask: one(0170700), args: "Qd$b", arch: arch::M68000UP},
    OpCode{name: "addb", size: 4, opcode: one(0003000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "addb", size: 2, opcode: one(0150000), mask: one(0170700), args: ";bDd", arch: arch::M68000UP},
    OpCode{name: "addb", size: 2, opcode: one(0150400), mask: one(0170700), args: "Dd~b", arch: arch::M68000UP},
    OpCode{name: "addw", size: 2, opcode: one(0050100), mask: one(0170700), args: "Qd%w", arch: arch::M68000UP},
    OpCode{name: "addw", size: 2, opcode: one(0150300), mask: one(0170700), args: "*wAd", arch: arch::M68000UP},
    OpCode{name: "addw", size: 4, opcode: one(0003100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "addw", size: 2, opcode: one(0150100), mask: one(0170700), args: "*wDd", arch: arch::M68000UP},
    OpCode{name: "addw", size: 2, opcode: one(0150500), mask: one(0170700), args: "Dd~w", arch: arch::M68000UP},
    OpCode{name: "addl", size: 2, opcode: one(0050200), mask: one(0170700), args: "Qd%l", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "addl", size: 6, opcode: one(0003200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "addl", size: 6, opcode: one(0003200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "addl", size: 2, opcode: one(0150700), mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "addl", size: 2, opcode: one(0150200), mask: one(0170700), args: "*lDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "addl", size: 2, opcode: one(0150600), mask: one(0170700), args: "Dd~l", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "addxb", size: 2, opcode: one(0150400), mask: one(0170770), args: "DsDd", arch: arch::M68000UP},
    OpCode{name: "addxb", size: 2, opcode: one(0150410), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},
    OpCode{name: "addxw", size: 2, opcode: one(0150500), mask: one(0170770), args: "DsDd", arch: arch::M68000UP},
    OpCode{name: "addxw", size: 2, opcode: one(0150510), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},
    OpCode{name: "addxl", size: 2, opcode: one(0150600), mask: one(0170770), args: "DsDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "addxl", size: 2, opcode: one(0150610), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},

    OpCode{name: "andib", size: 4, opcode: one(0001000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "andib", size: 4, opcode: one(0001074), mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "andiw", size: 4, opcode: one(0001100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "andiw", size: 4, opcode: one(0001174), mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "andil", size: 6, opcode: one(0001200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "andil", size: 6, opcode: one(0001200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "andi", size: 4, opcode: one(0001100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "andi", size: 4, opcode: one(0001074), mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "andi", size: 4, opcode: one(0001174), mask: one(0177777), args: "#wSs", arch: arch::M68000UP},

    // The and opcode can generate the andi instruction.
    OpCode{name: "andb", size: 4, opcode: one(0001000),	mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "andb", size: 4, opcode: one(0001074),	mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "andb", size: 2, opcode: one(0140000),	mask: one(0170700), args: ";bDd", arch: arch::M68000UP},
    OpCode{name: "andb", size: 2, opcode: one(0140400),	mask: one(0170700), args: "Dd~b", arch: arch::M68000UP},
    OpCode{name: "andw", size: 4, opcode: one(0001100),	mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "andw", size: 4, opcode: one(0001174),	mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "andw", size: 2, opcode: one(0140100),	mask: one(0170700), args: ";wDd", arch: arch::M68000UP},
    OpCode{name: "andw", size: 2, opcode: one(0140500),	mask: one(0170700), args: "Dd~w", arch: arch::M68000UP},
    OpCode{name: "andl", size: 6, opcode: one(0001200),	mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "andl", size: 6, opcode: one(0001200),	mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "andl", size: 2, opcode: one(0140200),	mask: one(0170700), args: ";lDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "andl", size: 2, opcode: one(0140600),	mask: one(0170700), args: "Dd~l", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "and", size: 4, opcode: one(0001100),	mask: one(0177700), args: "#w$w", arch: arch::M68000UP},
    OpCode{name: "and", size: 4, opcode: one(0001074),	mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "and", size: 4, opcode: one(0001174),	mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "and", size: 2, opcode: one(0140100),	mask: one(0170700), args: ";wDd", arch: arch::M68000UP},
    OpCode{name: "and", size: 2, opcode: one(0140500),	mask: one(0170700), args: "Dd~w", arch: arch::M68000UP},

    OpCode{name: "aslb", size: 2, opcode: one(0160400),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "aslb", size: 2, opcode: one(0160440),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "aslw", size: 2, opcode: one(0160500),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "aslw", size: 2, opcode: one(0160540),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "aslw", size: 2, opcode: one(0160700),	mask: one(0177700), args: "~s",   arch: arch::M68000UP },
    OpCode{name: "asll", size: 2, opcode: one(0160600),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "asll", size: 2, opcode: one(0160640),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "asrb", size: 2, opcode: one(0160000),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "asrb", size: 2, opcode: one(0160040),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "asrw", size: 2, opcode: one(0160100),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "asrw", size: 2, opcode: one(0160140),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "asrw", size: 2, opcode: one(0160300),	mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "asrl", size: 2, opcode: one(0160200),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "asrl", size: 2, opcode: one(0160240),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "bhiw", size: 2, opcode: one(0061000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "blsw", size: 2, opcode: one(0061400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bccw", size: 2, opcode: one(0062000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bcsw", size: 2, opcode: one(0062400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bnew", size: 2, opcode: one(0063000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "beqw", size: 2, opcode: one(0063400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bvcw", size: 2, opcode: one(0064000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bvsw", size: 2, opcode: one(0064400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bplw", size: 2, opcode: one(0065000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bmiw", size: 2, opcode: one(0065400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bgew", size: 2, opcode: one(0066000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bltw", size: 2, opcode: one(0066400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bgtw", size: 2, opcode: one(0067000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "blew", size: 2, opcode: one(0067400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "bhil", size: 2, opcode: one(0061377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "blsl", size: 2, opcode: one(0061777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bccl", size: 2, opcode: one(0062377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bcsl", size: 2, opcode: one(0062777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bnel", size: 2, opcode: one(0063377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "beql", size: 2, opcode: one(0063777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bvcl", size: 2, opcode: one(0064377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bvsl", size: 2, opcode: one(0064777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bpll", size: 2, opcode: one(0065377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bmil", size: 2, opcode: one(0065777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bgel", size: 2, opcode: one(0066377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bltl", size: 2, opcode: one(0066777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bgtl", size: 2, opcode: one(0067377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "blel", size: 2, opcode: one(0067777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},

    OpCode{name: "bhis", size: 2, opcode: one(0061000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "blss", size: 2, opcode: one(0061400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bccs", size: 2, opcode: one(0062000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bcss", size: 2, opcode: one(0062400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bnes", size: 2, opcode: one(0063000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "beqs", size: 2, opcode: one(0063400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bvcs", size: 2, opcode: one(0064000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bvss", size: 2, opcode: one(0064400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bpls", size: 2, opcode: one(0065000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bmis", size: 2, opcode: one(0065400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bges", size: 2, opcode: one(0066000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "blts", size: 2, opcode: one(0066400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bgts", size: 2, opcode: one(0067000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bles", size: 2, opcode: one(0067400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "jhi", size: 2, opcode: one(0061000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jls", size: 2, opcode: one(0061400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jcc", size: 2, opcode: one(0062000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jcs", size: 2, opcode: one(0062400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jne", size: 2, opcode: one(0063000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jeq", size: 2, opcode: one(0063400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jvc", size: 2, opcode: one(0064000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jvs", size: 2, opcode: one(0064400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jpl", size: 2, opcode: one(0065000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jmi", size: 2, opcode: one(0065400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jge", size: 2, opcode: one(0066000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jlt", size: 2, opcode: one(0066400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jgt", size: 2, opcode: one(0067000),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jle", size: 2, opcode: one(0067400),	mask: one(0177400), args: "Bg", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "bchg", size: 2, opcode: one(0000500),	mask: one(0170700), args: "Dd$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bchg", size: 4, opcode: one(0004100),	mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "bchg", size: 4, opcode: one(0004100),	mask: one(0177700), args: "#bqs", arch: arch::MCFISA_A},

    OpCode{name: "bclr", size: 2, opcode: one(0000600),	mask: one(0170700), args: "Dd$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bclr", size: 4, opcode: one(0004200),	mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "bclr", size: 4, opcode: one(0004200),	mask: one(0177700), args: "#bqs", arch: arch::MCFISA_A},

    OpCode{name: "bfchg", size: 4, opcode: two(0165300, 0), mask: two(0177700, 0170000), args: "?sO2O3",  arch: arch::M68020UP},
    OpCode{name: "bfclr", size: 4, opcode: two(0166300, 0), mask: two(0177700, 0170000), args: "?sO2O3",   arch: arch::M68020UP},
    OpCode{name: "bfexts", size: 4, opcode: two(0165700, 0), mask: two(0177700, 0100000), args: "/sO2O3D1", arch: arch::M68020UP},
    OpCode{name: "bfextu", size: 4, opcode: two(0164700, 0), mask: two(0177700, 0100000), args: "/sO2O3D1", arch: arch::M68020UP},
    OpCode{name: "bfffo", size: 4, opcode: two(0166700, 0), mask: two(0177700, 0100000), args: "/sO2O3D1", arch: arch::M68020UP},
    OpCode{name: "bfins", size: 4, opcode: two(0167700, 0), mask: two(0177700, 0100000), args: "D1?sO2O3", arch: arch::M68020UP},
    OpCode{name: "bfset", size: 4, opcode: two(0167300, 0), mask: two(0177700, 0170000), args: "?sO2O3",   arch: arch::M68020UP},
    OpCode{name: "bftst", size: 4, opcode: two(0164300, 0), mask: two(0177700, 0170000), args: "/sO2O3",   arch: arch::M68020UP},

    OpCode{name: "bgnd", size: 2, opcode: one(0045372),	mask: one(0177777), args: "", arch: arch::CPU32 | arch::FIDO_A},

    OpCode{name: "bitrev", size: 2, opcode: one(0000300),	mask: one(0177770), args: "Ds", arch: arch::MCFISA_AA | arch::MCFISA_C},

    OpCode{name: "bkpt", size: 2, opcode: one(0044110),	mask: one(0177770), args: "ts", arch: arch::M68010UP},

    OpCode{name: "braw", size: 2, opcode: one(0060000),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bral", size: 2, opcode: one(0060377),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B},
    OpCode{name: "bras", size: 2, opcode: one(0060000),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "bset", size: 2, opcode: one(0000700),	mask: one(0170700), args: "Dd$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bset", size: 2, opcode: one(0000700),	mask: one(0170700), args: "Ddvs", arch: arch::MCFISA_A},
    OpCode{name: "bset", size: 4, opcode: one(0004300),	mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "bset", size: 4, opcode: one(0004300),	mask: one(0177700), args: "#bqs", arch: arch::MCFISA_A},

    OpCode{name: "bsrw", size: 2, opcode: one(0060400),	mask: one(0177777), args: "BW", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "bsrl", size: 2, opcode: one(0060777),	mask: one(0177777), args: "BL", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "bsrs", size: 2, opcode: one(0060400),	mask: one(0177400), args: "BB", arch: arch::M68000UP | arch::MCFISA_A},

    OpCode{name: "btst", size: 2, opcode: one(0000400),	mask: one(0170700), args: "Dd;b", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "btst", size: 4, opcode: one(0004000),	mask: one(0177700), args: "#b@s", arch: arch::M68000UP},
    OpCode{name: "btst", size: 4, opcode: one(0004000),	mask: one(0177700), args: "#bqs", arch: arch::MCFISA_A},

    OpCode{name: "byterev", size: 2, opcode: one(0001300), mask: one(0177770), args: "Ds", arch: arch::MCFISA_A | arch::MCFISA_C},

    OpCode{name: "callm", size: 4, opcode: one(0003300),   mask: one(0177700), args: "#b!s", arch: arch::M68020},

    OpCode{name: "cas2w", size: 6, opcode: two(0006374,0), mask: two(0177777,0007070), args: "D3D6D2D5R1R4", arch: arch::M68020UP},
    OpCode{name: "cas2w", size: 6, opcode: two(0006374,0), mask: two(0177777,0007070), args: "D3D6D2D5r1r4", arch: arch::M68020UP},
    OpCode{name: "cas2l", size: 6, opcode: two(0007374,0), mask: two(0177777,0007070), args: "D3D6D2D5r1r4", arch: arch::M68020UP},
    OpCode{name: "cas2l", size: 6, opcode: two(0007374,0), mask: two(0177777,0007070), args: "D3D6D2D5R1R4", arch: arch::M68020UP},

    OpCode{name: "casb", size: 4, opcode: two(0005300, 0), mask: two(0177700, 0177070), args: "D3D2~s", arch: arch::M68020UP},
    OpCode{name: "casw", size: 4, opcode: two(0006300, 0), mask: two(0177700, 0177070),	args: "D3D2~s", arch: arch::M68020UP},
    OpCode{name: "casl", size: 4, opcode: two(0007300, 0), mask: two(0177700, 0177070),	args: "D3D2~s", arch: arch::M68020UP},

    OpCode{name: "chk2b", size: 4, opcode: 	two(0000300,0004000), mask: two(0177700,07777), args: "!sR1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "chk2w", size: 4, opcode: 	two(0001300,0004000),	mask: two(0177700,07777), args: "!sR1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "chk2l", size: 4, opcode: 	two(0002300,0004000),	mask: two(0177700,07777), args: "!sR1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},

    OpCode{name: "chkl", size: 2, opcode: one(0040400),	mask: one(0170700), args: ";lDd", arch: arch::M68000UP},
    OpCode{name: "chkw", size: 2, opcode: one(0040600),	mask: one(0170700), args: ";wDd", arch: arch::M68000UP},

    OpCode{name: "cinva", size: 2, opcode: one(0xf400|SCOPE_ALL), mask: one(0xff38), args: "ce", arch: arch::M68040UP},
    OpCode{name: "cinvl", size: 2, opcode: one(0xf400|SCOPE_LINE), mask: one(0xff38), args: "ceas", arch: arch::M68040UP},
    OpCode{name: "cinvp", size: 2, opcode: one(0xf400|SCOPE_PAGE), mask: one(0xff38), args: "ceas", arch: arch::M68040UP},
    OpCode{name: "cpusha", size: 2, opcode: one(0xf420|SCOPE_ALL), mask: one(0xff38), args: "ce", arch: arch::M68040UP},
    OpCode{name: "cpushl", size: 2, opcode: one(0xf420|SCOPE_LINE), mask: one(0xff38), args: "ceas", arch: arch::M68040UP | arch::MCFISA_A},
    OpCode{name: "cpushp", size: 2, opcode: one(0xf420|SCOPE_PAGE), mask: one(0xff38), args: "ceas", arch: arch::M68040UP},

    OpCode{name: "clrb", size: 2, opcode: one(0041000), mask: one(0177700), args: "$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "clrw", size: 2, opcode: one(0041100), mask: one(0177700), args: "$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "clrl", size: 2, opcode: one(0041200), mask: one(0177700), args: "$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "cmp2b", size: 4, opcode: two(0000300,0), mask: two(0177700,07777), args: "!sR1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "cmp2w", size: 4, opcode: two(0001300,0), mask: two(0177700,07777), args: "!sR1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "cmp2l", size: 4, opcode: two(0002300,0), mask: two(0177700,07777), args: "!sR1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "cmpaw", size: 2, opcode: one(0130300), mask: one(0170700), args: "*wAd", arch: arch::M68000UP},
    OpCode{name: "cmpal", size: 2, opcode: one(0130700), mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "cmpib", size: 4, opcode: one(0006000), mask: one(0177700), args: "#b@s", arch: arch::M68000UP},
    OpCode{name: "cmpib", size: 4, opcode: one(0006000), mask: one(0177700), args: "#bDs", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "cmpiw", size: 4, opcode: one(0006100), mask: one(0177700), args: "#w@s", arch: arch::M68000UP},
    OpCode{name: "cmpiw", size: 4, opcode: one(0006100), mask: one(0177700), args: "#wDs", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "cmpil", size: 6, opcode: one(0006200), mask: one(0177700), args: "#l@s", arch: arch::M68000UP},
    OpCode{name: "cmpil", size: 6, opcode: one(0006200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "cmpmb", size: 2, opcode: one(0130410), mask: one(0170770), args: "+s+d", arch: arch::M68000UP},
    OpCode{name: "cmpmw", size: 2, opcode: one(0130510), mask: one(0170770), args: "+s+d", arch: arch::M68000UP},
    OpCode{name: "cmpml", size: 2, opcode: one(0130610), mask: one(0170770), args: "+s+d", arch: arch::M68000UP},
/* The cmp opcode can generate the cmpa, cmpm, and cmpi instructions.  */
    OpCode{name: "cmpb", size: 4, opcode: one(0006000),	mask: one(0177700), args: "#b@s", arch: arch::M68000UP},
    OpCode{name: "cmpb", size: 4, opcode: one(0006000),	mask: one(0177700), args: "#bDs", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "cmpb", size: 2, opcode: one(0130410),	mask: one(0170770), args: "+s+d", arch: arch::M68000UP},
    OpCode{name: "cmpb", size: 2, opcode: one(0130000),	mask: one(0170700), args: ";bDd", arch: arch::M68000UP},
    OpCode{name: "cmpb", size: 2, opcode: one(0130000),	mask: one(0170700), args: "*bDd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "cmpw", size: 2, opcode: one(0130300),	mask: one(0170700), args: "*wAd", arch: arch::M68000UP},
    OpCode{name: "cmpw", size: 4, opcode: one(0006100),	mask: one(0177700), args: "#w@s", arch: arch::M68000UP},
    OpCode{name: "cmpw", size: 4, opcode: one(0006100),	mask: one(0177700), args: "#wDs", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "cmpw", size: 2, opcode: one(0130510),	mask: one(0170770), args: "+s+d", arch: arch::M68000UP},
    OpCode{name: "cmpw", size: 2, opcode: one(0130100),	mask: one(0170700), args: "*wDd", arch: arch::M68000UP | arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "cmpl", size: 2, opcode: one(0130700),	mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "cmpl", size: 6, opcode: one(0006200),	mask: one(0177700), args: "#l@s", arch: arch::M68000UP},
    OpCode{name: "cmpl", size: 6, opcode: one(0006200),	mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "cmpl", size: 2, opcode: one(0130610),	mask: one(0170770), args: "+s+d", arch: arch::M68000UP},
    OpCode{name: "cmpl", size: 2, opcode: one(0130200),	mask: one(0170700), args: "*lDd", arch: arch::M68000UP | arch::MCFISA_A},
    
    OpCode{name: "cp0bcbusy", size: 2, opcode: one(0176300),        mask: one(01777770), args: "BW", arch: arch::MCFISA_A},
    OpCode{name: "cp1bcbusy", size: 2, opcode: one(0177300),        mask: one(01777770), args: "BW", arch: arch::MCFISA_A},
    OpCode{name: "cp0nop",    size: 4, opcode: two(0176000,0), mask: two(01777477,0170777), args: "jE", arch: arch::MCFISA_A},
    OpCode{name: "cp1nop",    size: 4, opcode: two(0177000,0), mask: two(01777477,0170777), args: "jE", arch: arch::MCFISA_A},
    /* These all have 2 opcode words, but no fixed bits in the second
    word.  We use a leading ' ' in the args string to indicate the
    extra opcode word.  */
    OpCode{name: "cp0ldb", size: 6, opcode: one(0176000), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1ldb", size: 6, opcode: one(0177000), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0ldw", size: 6, opcode: one(0176100), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1ldw", size: 6, opcode: one(0177100), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0ldl", size: 6, opcode: one(0176200), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1ldl", size: 6, opcode: one(0177200), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0ld",  size: 6, opcode: one(0176200), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1ld",  size: 6, opcode: one(0177200), mask: one(01777700), args: ".pwR1jEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0stb", size: 6, opcode: one(0176400), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1stb", size: 6, opcode: one(0177400), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0stw", size: 6, opcode: one(0176500), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1stw", size: 6, opcode: one(0177500), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0stl", size: 6, opcode: one(0176600), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1stl", size: 6, opcode: one(0177600), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp0st",  size: 6, opcode: one(0176600), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    OpCode{name: "cp1st",  size: 6, opcode: one(0177600), mask: one(01777700), args: ".R1pwjEK3", arch: arch::MCFISA_A},
    
    OpCode{name: "dbcc", size:  2,	opcode: one(0052310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbcs", size:  2,	opcode: one(0052710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbeq", size:  2,	opcode: one(0053710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbf",  size:  2,	opcode: one(0050710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbge", size:  2,	opcode: one(0056310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbgt", size:  2,	opcode: one(0057310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbhi", size:  2,	opcode: one(0051310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dble", size:  2,	opcode: one(0057710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbls", size:  2,	opcode: one(0051710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dblt", size:  2,	opcode: one(0056710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbmi", size:  2,	opcode: one(0055710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbne", size:  2,	opcode: one(0053310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbpl",   size: 2,	opcode: one(0055310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbt",    size: 2,	opcode: one(0050310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbvc",   size: 2,	opcode: one(0054310), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "dbvs",   size: 2,	opcode: one(0054710), mask: one(0177770), args: "DsBw", arch: arch::M68000UP},
    OpCode{name: "divsw",  size: 2,	opcode: one(0100700), mask: one(0170700), args: ";wDd", arch: arch::M68000UP | arch::MCFHWDIV},
    OpCode{name: "divsl",  size: 4, opcode: two(0046100,0006000), mask: two(0177700,0107770), args: ";lD3D1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divsl",  size: 4, opcode: two(0046100,0004000), mask: two(0177700,0107770), args: ";lDD",   arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divsl",  size: 4, opcode: two(0046100,0004000), mask: two(0177700,0107770), args: "qsDD",   arch: arch::MCFHWDIV},
    OpCode{name: "divsll", size: 4, opcode: two(0046100,0004000), mask: two(0177700,0107770), args: ";lD3D1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divsll", size: 4, opcode: two(0046100,0004000), mask: two(0177700,0107770), args: ";lDD",   arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divuw",  size: 2,	opcode: one(0100300), mask: one(0170700), args: ";wDd", arch: arch::M68000UP | arch::MCFHWDIV},
    OpCode{name: "divul",  size: 4,	opcode: two(0046100,0002000), mask: two(0177700,0107770), args: ";lD3D1", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divul",  size: 4,	opcode: two(0046100,0000000), mask: two(0177700,0107770), args: ";lDD",   arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divul",  size: 4,	opcode: two(0046100,0000000), mask: two(0177700,0107770), args: "qsDD",   arch: arch::MCFHWDIV},
    OpCode{name: "divull", size: 4, opcode: two(0046100,0000000), mask: two(0177700,0107770), args: ";lD3D1",arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "divull", size: 4, opcode: two(0046100,0000000), mask: two(0177700,0107770), args: ";lDD",  arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "eorib", size:  4,	opcode: one(0005000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "eorib", size:  4,	opcode: one(0005074), mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "eoriw", size:  4,	opcode: one(0005100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "eoriw", size:  4,	opcode: one(0005174), mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "eoril", size:  6,	opcode: one(0005200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "eoril", size:  6,	opcode: one(0005200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "eori",  size:  4,	opcode: one(0005074), mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "eori",  size:  4,	opcode: one(0005174), mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "eori",  size:  4,	opcode: one(0005100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    /* The eor opcode can generate the eori instruction.  */
    OpCode{name: "eorb",  size:  4, opcode: one(0005000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "eorb",  size:  4, opcode: one(0005074), mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "eorb",  size:  2, opcode: one(0130400), mask: one(0170700), args: "Dd$s", arch: arch::M68000UP},
    OpCode{name: "eorw",  size:  4, opcode: one(0005100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "eorw",  size:  4, opcode: one(0005174), mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "eorw",  size:  2, opcode: one(0130500), mask: one(0170700), args: "Dd$s", arch: arch::M68000UP},
    OpCode{name: "eorl",  size:  6, opcode: one(0005200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "eorl",  size:  6, opcode: one(0005200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "eorl",  size:  2, opcode: one(0130600), mask: one(0170700), args: "Dd$s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "eor",   size:  4,	opcode: one(0005074), mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "eor",   size:  4,	opcode: one(0005174), mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "eor",   size:  4,	opcode: one(0005100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "eor",   size:  2,	opcode: one(0130500), mask: one(0170700), args: "Dd$s", arch: arch::M68000UP},
            
    OpCode{name: "exg",   size:  2,	opcode: one(0140500), mask: one(0170770), args: "DdDs", arch: arch::M68000UP },
    OpCode{name: "exg",   size:  2,	opcode: one(0140510), mask: one(0170770), args: "AdAs", arch: arch::M68000UP },
    OpCode{name: "exg",   size:  2,	opcode: one(0140610), mask: one(0170770), args: "DdAs", arch: arch::M68000UP },
    OpCode{name: "exg",   size:  2,	opcode: one(0140610), mask: one(0170770), args: "AsDd", arch: arch::M68000UP },
    OpCode{name: "extw",  size:  2,	opcode: one(0044200), mask: one(0177770), args: "Ds", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "extl",  size:  2,	opcode: one(0044300), mask: one(0177770), args: "Ds", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "extbl", size:  2,	opcode: one(0044700), mask: one(0177770), args: "Ds", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "ff1",   size:  2, opcode: one(0002300), mask: one(0177770), args: "Ds", arch: arch::MCFISA_AA | arch::MCFISA_C},
    /* float stuff starts here */
    OpCode{name: "fabsb", size:  4,	opcode: two(0xF000, 0x5818), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fabsb", size:  4,	opcode: two(0xF000, 0x5818), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fabsd", size:  4,	opcode: two(0xF000, 0x0018), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fabsd", size:  4,	opcode: two(0xF000, 0x0018), mask: two(0xF1C0, 0xE07F), args: "IiFt", arch: arch::CFLOAT},
    OpCode{name: "fabsd", size:  4,	opcode: two(0xF000, 0x5418), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fabsd", size:  4,	opcode: two(0xF000, 0x5418), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fabsl", size:  4,	opcode: two(0xF000, 0x4018), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fabsl", size:  4,	opcode: two(0xF000, 0x4018), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fabsp", size:  4,	opcode: two(0xF000, 0x4C18), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fabss", size:  4,	opcode: two(0xF000, 0x4418), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::CFLOAT},
    OpCode{name: "fabss", size:  4,	opcode: two(0xF000, 0x4418), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fabsw", size:  4,	opcode: two(0xF000, 0x5018), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fabsw", size:  4,	opcode: two(0xF000, 0x5018), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fabsx", size:  4,	opcode: two(0xF000, 0x0018), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fabsx", size:  4,	opcode: two(0xF000, 0x4818), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fabsx", size:  4,	opcode: two(0xF000, 0x0018), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fsabsb", size: 4, opcode: two(0xF000, 0x5858), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fsabsb", size: 4, opcode: two(0xF000, 0x5858), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsabsd", size: 4, opcode: two(0xF000, 0x0058), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fsabsd", size: 4, opcode: two(0xF000, 0x0058), mask: two(0xF1C0, 0xE07F), args: "IiFt", arch: arch::CFLOAT},
    OpCode{name: "fsabsd", size: 4, opcode: two(0xF000, 0x5458), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fsabsd", size: 4, opcode: two(0xF000, 0x5458), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fsabsl", size: 4, opcode: two(0xF000, 0x4058), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fsabsl", size: 4, opcode: two(0xF000, 0x4058), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsabsp", size: 4, opcode: two(0xF000, 0x4C58), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fsabss", size: 4, opcode: two(0xF000, 0x4458), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsabss", size: 4, opcode: two(0xF000, 0x4458), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fsabsw", size: 4, opcode: two(0xF000, 0x5058), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fsabsw", size: 4, opcode: two(0xF000, 0x5058), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsabsx", size: 4, opcode: two(0xF000, 0x0058), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP },
    OpCode{name: "fsabsx", size: 4, opcode: two(0xF000, 0x4858), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP },
    OpCode{name: "fsabsx", size: 4, opcode: two(0xF000, 0x0058), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP },
    OpCode{name: "fdabsb", size: 4, opcode: two(0xF000, 0x585C), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdabsb", size: 4, opcode: two(0xF000, 0x585c), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fdabsd", size: 4, opcode: two(0xF000, 0x005C), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fdabsd", size: 4, opcode: two(0xF000, 0x005C), mask: two(0xF1C0, 0xE07F), args: "IiFt", arch: arch::CFLOAT },
    OpCode{name: "fdabsd", size: 4, opcode: two(0xF000, 0x545C), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "fdabsd", size: 4, opcode: two(0xF000, 0x545c), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fdabsl", size: 4, opcode: two(0xF000, 0x405C), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdabsl", size: 4, opcode: two(0xF000, 0x405c), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fdabsp", size: 4, opcode: two(0xF000, 0x4C5c), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fdabss", size: 4, opcode: two(0xF000, 0x445C), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdabss", size: 4, opcode: two(0xF000, 0x445c), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fdabsw", size: 4, opcode: two(0xF000, 0x505C), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdabsw", size: 4, opcode: two(0xF000, 0x505c), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fdabsx", size: 4, opcode: two(0xF000, 0x005c), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fdabsx", size: 4, opcode: two(0xF000, 0x485c), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fdabsx", size: 4, opcode: two(0xF000, 0x005c), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "facosb", size: 4, opcode: two(0xF000, 0x581C), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "facosd", size: 4, opcode: two(0xF000, 0x541C), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "facosl", size: 4, opcode: two(0xF000, 0x401C), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "facosp", size: 4, opcode: two(0xF000, 0x4C1C), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "facoss", size: 4, opcode: two(0xF000, 0x441C), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "facosw", size: 4, opcode: two(0xF000, 0x501C), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "facosx", size: 4, opcode: two(0xF000, 0x001C), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "facosx", size: 4, opcode: two(0xF000, 0x481C), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "facosx", size: 4, opcode: two(0xF000, 0x001C), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT },
    OpCode{name: "faddb",  size: 4,	opcode: two(0xF000, 0x5822), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "faddb",  size: 4,	opcode: two(0xF000, 0x5822), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "faddd",  size: 4,	opcode: two(0xF000, 0x0022), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "faddd",  size: 4,	opcode: two(0xF000, 0x5422), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "faddd",  size: 4,	opcode: two(0xF000, 0x5422), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "faddd",  size: 4,	opcode: two(0xF000, 0x5422), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "faddl",  size: 4,	opcode: two(0xF000, 0x4022), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "faddl",  size: 4,	opcode: two(0xF000, 0x4022), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "faddp",  size: 4,	opcode: two(0xF000, 0x4C22), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fadds",  size: 4,	opcode: two(0xF000, 0x4422), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fadds",  size: 4,	opcode: two(0xF000, 0x4422), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "faddw",  size: 4,	opcode: two(0xF000, 0x5022), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "faddw",  size: 4,	opcode: two(0xF000, 0x5022), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "faddx",  size: 4,	opcode: two(0xF000, 0x0022), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "faddx",  size: 4,	opcode: two(0xF000, 0x4822), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fsaddb", size: 4, opcode: two(0xF000, 0x5862), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP },
    OpCode{name: "fsaddb", size: 4, opcode: two(0xF000, 0x5862), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsaddd", size: 4, opcode: two(0xF000, 0x0062), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fsaddd", size: 4, opcode: two(0xF000, 0x5462), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP },
    OpCode{name: "fsaddd", size: 4, opcode: two(0xF000, 0x5462), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "fsaddl", size: 4, opcode: two(0xF000, 0x4062), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP },
    OpCode{name: "fsaddl", size: 4, opcode: two(0xF000, 0x4062), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsaddp", size: 4, opcode: two(0xF000, 0x4C62), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP },
    OpCode{name: "fsadds", size: 4, opcode: two(0xF000, 0x4462), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP },
    OpCode{name: "fsadds", size: 4, opcode: two(0xF000, 0x4462), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsaddw", size: 4, opcode: two(0xF000, 0x5062), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP },
    OpCode{name: "fsaddw", size: 4, opcode: two(0xF000, 0x5062), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsaddx", size: 4, opcode: two(0xF000, 0x0062), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP },
    OpCode{name: "fsaddx", size: 4, opcode: two(0xF000, 0x4862), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP },
    OpCode{name: "fdaddb", size: 4, opcode: two(0xF000, 0x5866), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdaddb", size: 4, opcode: two(0xF000, 0x5866), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP },
    OpCode{name: "fdaddd", size: 4, opcode: two(0xF000, 0x0066), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fdaddd", size: 4, opcode: two(0xF000, 0x5466), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdaddd", size: 4, opcode: two(0xF000, 0x5466), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP },
    OpCode{name: "fdaddl", size: 4, opcode: two(0xF000, 0x4066), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdaddl", size: 4, opcode: two(0xF000, 0x4066), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP },
    OpCode{name: "fdaddp", size: 4, opcode: two(0xF000, 0x4C66), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP },
    OpCode{name: "fdadds", size: 4, opcode: two(0xF000, 0x4466), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP },
    OpCode{name: "fdadds", size: 4, opcode: two(0xF000, 0x4466), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdaddw", size: 4, opcode: two(0xF000, 0x5066), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdaddw", size: 4, opcode: two(0xF000, 0x5066), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP },
    OpCode{name: "fdaddx", size: 4, opcode: two(0xF000, 0x0066), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP },
    OpCode{name: "fdaddx", size: 4, opcode: two(0xF000, 0x4866), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP },
    OpCode{name: "fasinb", size: 4, opcode: two(0xF000, 0x580C), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fasind", size: 4, opcode: two(0xF000, 0x540C), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fasinl", size: 4, opcode: two(0xF000, 0x400C), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fasinp", size: 4, opcode: two(0xF000, 0x4C0C), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fasins", size: 4, opcode: two(0xF000, 0x440C), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fasinw", size: 4, opcode: two(0xF000, 0x500C), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fasinx", size: 4, opcode: two(0xF000, 0x000C), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fasinx", size: 4, opcode: two(0xF000, 0x480C), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fasinx", size: 4, opcode: two(0xF000, 0x000C), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT },
    OpCode{name: "fatanb", size: 4, opcode: two(0xF000, 0x580A), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fatand", size: 4, opcode: two(0xF000, 0x540A), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fatanl", size: 4, opcode: two(0xF000, 0x400A), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fatanp", size: 4, opcode: two(0xF000, 0x4C0A), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fatans", size: 4, opcode: two(0xF000, 0x440A), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fatanw", size: 4, opcode: two(0xF000, 0x500A), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fatanx", size: 4, opcode: two(0xF000, 0x000A), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fatanx", size: 4, opcode: two(0xF000, 0x480A), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fatanx", size: 4, opcode: two(0xF000, 0x000A), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT },
    OpCode{name: "fatanhb", size: 4, opcode: two(0xF000, 0x580D), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhd", size: 4, opcode: two(0xF000, 0x540D), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhl", size: 4, opcode: two(0xF000, 0x400D), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhp", size: 4, opcode: two(0xF000, 0x4C0D), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhs", size: 4, opcode: two(0xF000, 0x440D), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhw", size: 4, opcode: two(0xF000, 0x500D), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhx", size: 4, opcode: two(0xF000, 0x000D), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fatanhx", size: 4, opcode: two(0xF000, 0x480D), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fatanhx", size: 4, opcode: two(0xF000, 0x000D), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT },
    /* This is the same as `fbf .+2'.  */
    OpCode{name: "fnop",   size:  4, opcode: two(0xF280, 0x0000), mask: two(0xFFFF, 0xFFFF), args: "Ii", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbeq",   size:  2, opcode: one(0xF081), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbf",    size:  2, opcode: one(0xF080), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbge",   size:  2, opcode: one(0xF093), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbgl",   size:  2, opcode: one(0xF096), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbgle",  size:  2, opcode: one(0xF097), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbgt",   size:  2, opcode: one(0xF092), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fble",   size:  2, opcode: one(0xF095), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fblt",   size:  2, opcode: one(0xF094), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbne",   size:  2, opcode: one(0xF08E), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbnge",  size:  2, opcode: one(0xF09C), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbngl",  size:  2, opcode: one(0xF099), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbngle", size:  2, opcode: one(0xF098), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbngt",  size:  2, opcode: one(0xF09D), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbnle",  size:  2, opcode: one(0xF09A), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbnlt",  size:  2, opcode: one(0xF09B), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fboge",  size:  2, opcode: one(0xF083), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbogl",  size:  2, opcode: one(0xF086), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbogt",  size:  2, opcode: one(0xF082), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbole",  size:  2, opcode: one(0xF085), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbolt",  size:  2, opcode: one(0xF084), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbor",   size:  2, opcode: one(0xF087), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbseq",  size:  2, opcode: one(0xF091), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbsf",   size:  2, opcode: one(0xF090), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbsne",  size:  2, opcode: one(0xF09E), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbst",   size:  2, opcode: one(0xF09F), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbt",    size:  2, opcode: one(0xF08F), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbueq",  size:  2, opcode: one(0xF089), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbuge",  size:  2, opcode: one(0xF08B), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbugt",  size:  2, opcode: one(0xF08A), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbule",  size:  2, opcode: one(0xF08D), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbult",  size:  2, opcode: one(0xF08C), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbun",   size:  2, opcode: one(0xF088), mask: one(0xF1FF), args: "IdBW", arch: arch::MFLOAT | arch::CFLOAT },
    OpCode{name: "fbeql",  size:  2, opcode: one(0xF0C1), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbfl",   size:  2, opcode: one(0xF0C0), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbgel",  size:  2, opcode: one(0xF0D3), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbgll",  size:  2, opcode: one(0xF0D6), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbglel", size:  2, opcode: one(0xF0D7), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbgtl",  size:  2, opcode: one(0xF0D2), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fblel",  size:  2, opcode: one(0xF0D5), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbltl",  size:  2, opcode: one(0xF0D4), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbnel",  size:  2, opcode: one(0xF0CE), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbngel", size:  2, opcode: one(0xF0DC), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbngll", size:  2, opcode: one(0xF0D9), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbnglel", size: 2, opcode: one(0xF0D8), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbngtl", size: 2,	opcode: one(0xF0DD), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbnlel", size: 2,	opcode: one(0xF0DA), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbnltl", size: 2,	opcode: one(0xF0DB), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbogel", size: 2,	opcode: one(0xF0C3), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbogll", size: 2,	opcode: one(0xF0C6), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbogtl", size: 2,	opcode: one(0xF0C2), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbolel", size: 2,	opcode: one(0xF0C5), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fboltl", size: 2,	opcode: one(0xF0C4), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fborl",  size: 2,	opcode: one(0xF0C7), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbseql", size: 2,	opcode: one(0xF0D1), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbsfl",  size: 2,	opcode: one(0xF0D0), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbsnel", size: 2,	opcode: one(0xF0DE), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbstl",  size: 2,	opcode: one(0xF0DF), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbtl",   size: 2,	opcode: one(0xF0CF), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbueql", size: 2,	opcode: one(0xF0C9), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbugel", size: 2,	opcode: one(0xF0CB), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbugtl", size: 2,	opcode: one(0xF0CA), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbulel", size: 2,	opcode: one(0xF0CD), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbultl", size: 2,	opcode: one(0xF0CC), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fbunl",  size: 2,	opcode: one(0xF0C8), mask: one(0xF1FF), args: "IdBC", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjeq",   size: 2,	opcode: one(0xF081), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjf",    size: 2,	opcode: one(0xF080), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjge",   size: 2,	opcode: one(0xF093), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjgl",   size: 2,	opcode: one(0xF096), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjgle",  size: 2,	opcode: one(0xF097), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjgt",   size: 2,	opcode: one(0xF092), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjle",   size: 2,	opcode: one(0xF095), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjlt",   size: 2,	opcode: one(0xF094), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjne",   size: 2,	opcode: one(0xF08E), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjnge",  size: 2,	opcode: one(0xF09C), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjngl",  size: 2,	opcode: one(0xF099), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjngle", size: 2,	opcode: one(0xF098), mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjngt", size: 2, opcode: one(0xF09D),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjnle", size: 2, opcode: one(0xF09A),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjnlt", size: 2, opcode: one(0xF09B),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjoge", size: 2, opcode: one(0xF083),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjogl", size: 2, opcode: one(0xF086),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjogt", size: 2, opcode: one(0xF082),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjole", size: 2, opcode: one(0xF085),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjolt", size: 2, opcode: one(0xF084),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjor",  size: 2, opcode: one(0xF087),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjseq", size: 2, opcode: one(0xF091),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjsf",  size: 2, opcode: one(0xF090),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjsne", size: 2, opcode: one(0xF09E),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjst",  size: 2, opcode: one(0xF09F),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjt",   size: 2, opcode: one(0xF08F),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjueq", size: 2, opcode: one(0xF089),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjuge", size: 2, opcode: one(0xF08B),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjugt", size: 2, opcode: one(0xF08A),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjule", size: 2, opcode: one(0xF08D),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjult", size: 2, opcode: one(0xF08C),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fjun",  size: 2, opcode: one(0xF088),	mask: one(0xF1BF), args: "IdBc", arch: arch::MFLOAT | arch::CFLOAT},
    OpCode{name: "fcmpb", size: 4, opcode: two(0xF000, 0x5838), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fcmpb", size: 4, opcode: two(0xF000, 0x5838), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fcmpd", size: 4, opcode: two(0xF000, 0x5438), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fcmpd", size: 4, opcode: two(0xF000, 0x5438), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "fcmpd", size: 4, opcode: two(0xF000, 0x0038), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fcmpl", size: 4, opcode: two(0xF000, 0x4038), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fcmpl", size: 4, opcode: two(0xF000, 0x4038), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fcmpp", size: 4, opcode: two(0xF000, 0x4C38), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fcmps", size: 4, opcode: two(0xF000, 0x4438), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fcmps", size: 4, opcode: two(0xF000, 0x4438), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fcmpw", size: 4, opcode: two(0xF000, 0x5038), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fcmpw", size: 4, opcode: two(0xF000, 0x5038), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fcmpx", size: 4, opcode: two(0xF000, 0x0038), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fcmpx", size: 4, opcode: two(0xF000, 0x4838), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fcosb", size: 4, opcode: two(0xF000, 0x581D), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fcosd", size: 4, opcode: two(0xF000, 0x541D), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fcosl", size: 4, opcode: two(0xF000, 0x401D), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fcosp", size: 4, opcode: two(0xF000, 0x4C1D), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fcoss", size: 4, opcode: two(0xF000, 0x441D), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fcosw", size: 4, opcode: two(0xF000, 0x501D), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fcosx", size: 4, opcode: two(0xF000, 0x001D), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fcosx", size: 4, opcode: two(0xF000, 0x481D), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fcosx", size: 4, opcode: two(0xF000, 0x001D), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT },
    OpCode{name: "fcoshb", size: 4, opcode: two(0xF000, 0x5819), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshd", size: 4, opcode: two(0xF000, 0x5419), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshl", size: 4, opcode: two(0xF000, 0x4019), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshp", size: 4, opcode: two(0xF000, 0x4C19), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshs", size: 4, opcode: two(0xF000, 0x4419), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshw", size: 4, opcode: two(0xF000, 0x5019), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshx", size: 4, opcode: two(0xF000, 0x0019), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fcoshx", size: 4, opcode: two(0xF000, 0x4819), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fcoshx", size: 4, opcode: two(0xF000, 0x0019), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fdbeq",  size: 4, opcode: two(0xF048, 0x0001), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbf",   size: 4, opcode: two(0xF048, 0x0000), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbge",  size: 4, opcode: two(0xF048, 0x0013), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbgl",  size: 4, opcode: two(0xF048, 0x0016), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbgle", size: 4, opcode: two(0xF048, 0x0017), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbgt",  size: 4, opcode: two(0xF048, 0x0012), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdble",  size: 4, opcode: two(0xF048, 0x0015), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdblt",  size: 4, opcode: two(0xF048, 0x0014), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbne",  size: 4, opcode: two(0xF048, 0x000E), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbnge", size: 4, opcode: two(0xF048, 0x001C), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbngl", size: 4, opcode: two(0xF048, 0x0019), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbngle", size: 4, opcode: two(0xF048, 0x0018), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbngt",  size: 4, opcode: two(0xF048, 0x001D), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbnle",  size: 4, opcode: two(0xF048, 0x001A), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbnlt",  size: 4, opcode: two(0xF048, 0x001B), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdboge",  size: 4, opcode: two(0xF048, 0x0003), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbogl",  size: 4, opcode: two(0xF048, 0x0006), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbogt",  size: 4, opcode: two(0xF048, 0x0002), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbole",  size: 4, opcode: two(0xF048, 0x0005), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbolt",  size: 4, opcode: two(0xF048, 0x0004), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbor",   size: 4, opcode: two(0xF048, 0x0007), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbseq",  size: 4, opcode: two(0xF048, 0x0011), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbsf",   size: 4, opcode: two(0xF048, 0x0010), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbsne",  size: 4, opcode: two(0xF048, 0x001E), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbst",   size: 4, opcode: two(0xF048, 0x001F), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbt",    size: 4, opcode: two(0xF048, 0x000F), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT},
    OpCode{name: "fdbueq",  size: 4, opcode: two(0xF048, 0x0009), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT },
    OpCode{name: "fdbuge",  size: 4, opcode: two(0xF048, 0x000B), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT },
    OpCode{name: "fdbugt",  size: 4, opcode: two(0xF048, 0x000A), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT },
    OpCode{name: "fdbule",  size: 4, opcode: two(0xF048, 0x000D), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT },
    OpCode{name: "fdbult",  size: 4, opcode: two(0xF048, 0x000C), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT },
    OpCode{name: "fdbun",   size: 4, opcode: two(0xF048, 0x0008), mask: two(0xF1F8, 0xFFFF), args: "IiDsBw", arch: arch::MFLOAT },
    OpCode{name: "fdivb",   size: 4, opcode: two(0xF000, 0x5820), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fdivb",   size: 4, opcode: two(0xF000, 0x5820), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdivd",   size: 4, opcode: two(0xF000, 0x0020), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fdivd",   size: 4, opcode: two(0xF000, 0x5420), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fdivd",   size: 4, opcode: two(0xF000, 0x5420), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "fdivl",   size: 4, opcode: two(0xF000, 0x4020), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fdivl",   size: 4, opcode: two(0xF000, 0x4020), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdivp",   size: 4, opcode: two(0xF000, 0x4C20), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fdivs",   size: 4, opcode: two(0xF000, 0x4420), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fdivs",   size: 4, opcode: two(0xF000, 0x4420), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdivw",   size: 4, opcode: two(0xF000, 0x5020), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fdivw",   size: 4, opcode: two(0xF000, 0x5020), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fdivx",   size: 4, opcode: two(0xF000, 0x0020), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fdivx",   size: 4, opcode: two(0xF000, 0x4820), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fsdivb",  size: 4, opcode: two(0xF000, 0x5860), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP },
    OpCode{name: "fsdivb",  size: 4, opcode: two(0xF000, 0x5860), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsdivd",  size: 4, opcode: two(0xF000, 0x0060), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fsdivd",  size: 4, opcode: two(0xF000, 0x5460), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP },
    OpCode{name: "fsdivd",  size: 4, opcode: two(0xF000, 0x5460), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "fsdivl",  size: 4, opcode: two(0xF000, 0x4060), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP },
    OpCode{name: "fsdivl",  size: 4, opcode: two(0xF000, 0x4060), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsdivp",  size: 4, opcode: two(0xF000, 0x4C60), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP },
    OpCode{name: "fsdivs",  size: 4, opcode: two(0xF000, 0x4460), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP },
    OpCode{name: "fsdivs",  size: 4, opcode: two(0xF000, 0x4460), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsdivw",  size: 4, opcode: two(0xF000, 0x5060), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP },
    OpCode{name: "fsdivw",  size: 4, opcode: two(0xF000, 0x5060), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fsdivx",  size: 4, opcode: two(0xF000, 0x0060), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP },
    OpCode{name: "fsdivx",  size: 4, opcode: two(0xF000, 0x4860), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP },
    OpCode{name: "fddivb",  size: 4, opcode: two(0xF000, 0x5864), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP },
    OpCode{name: "fddivb",  size: 4, opcode: two(0xF000, 0x5864), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fddivd",  size: 4, opcode: two(0xF000, 0x0064), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT },
    OpCode{name: "fddivd",  size: 4, opcode: two(0xF000, 0x5464), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP },
    OpCode{name: "fddivd",  size: 4, opcode: two(0xF000, 0x5464), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT },
    OpCode{name: "fddivl",  size: 4, opcode: two(0xF000, 0x4064), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP },
    OpCode{name: "fddivl",  size: 4, opcode: two(0xF000, 0x4064), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fddivp",  size: 4, opcode: two(0xF000, 0x4C64), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP },
    OpCode{name: "fddivs",  size: 4, opcode: two(0xF000, 0x4464), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP },
    OpCode{name: "fddivs",  size: 4, opcode: two(0xF000, 0x4464), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fddivw",  size: 4, opcode: two(0xF000, 0x5064), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP },
    OpCode{name: "fddivw",  size: 4, opcode: two(0xF000, 0x5064), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT },
    OpCode{name: "fddivx",  size: 4, opcode: two(0xF000, 0x0064), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP },
    OpCode{name: "fddivx",  size: 4, opcode: two(0xF000, 0x4864), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP },
    OpCode{name: "fetoxb",  size: 4, opcode: two(0xF000, 0x5810), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxd",  size: 4, opcode: two(0xF000, 0x5410), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxl",  size: 4, opcode: two(0xF000, 0x4010), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxp",  size: 4, opcode: two(0xF000, 0x4C10), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxs",  size: 4, opcode: two(0xF000, 0x4410), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxw",  size: 4, opcode: two(0xF000, 0x5010), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxx",  size: 4, opcode: two(0xF000, 0x0010), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT },
    OpCode{name: "fetoxx",  size: 4, opcode: two(0xF000, 0x4810), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT },
    OpCode{name: "fetoxx",  size: 4, opcode: two(0xF000, 0x0010), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT },
    OpCode{name: "fetoxm1b", size: 4, opcode: two(0xF000, 0x5808), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1d", size: 4, opcode: two(0xF000, 0x5408), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1l", size: 4, opcode: two(0xF000, 0x4008), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1p", size: 4, opcode: two(0xF000, 0x4C08), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1s", size: 4, opcode: two(0xF000, 0x4408), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1w", size: 4, opcode: two(0xF000, 0x5008), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1x", size: 4, opcode: two(0xF000, 0x0008), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1x", size: 4, opcode: two(0xF000, 0x4808), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fetoxm1x", size: 4, opcode: two(0xF000, 0x0008), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fgetexpb", size: 4, opcode: two(0xF000, 0x581E), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpd", size: 4, opcode: two(0xF000, 0x541E), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpl", size: 4, opcode: two(0xF000, 0x401E), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpp", size: 4, opcode: two(0xF000, 0x4C1E), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexps", size: 4, opcode: two(0xF000, 0x441E), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpw", size: 4, opcode: two(0xF000, 0x501E), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpx", size: 4, opcode: two(0xF000, 0x001E), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpx", size: 4, opcode: two(0xF000, 0x481E), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fgetexpx", size: 4, opcode: two(0xF000, 0x001E), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fgetmanb", size: 4, opcode: two(0xF000, 0x581F), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmand", size: 4, opcode: two(0xF000, 0x541F), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmanl", size: 4, opcode: two(0xF000, 0x401F), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmanp", size: 4, opcode: two(0xF000, 0x4C1F), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmans", size: 4, opcode: two(0xF000, 0x441F), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmanw", size: 4, opcode: two(0xF000, 0x501F), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmanx", size: 4, opcode: two(0xF000, 0x001F), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fgetmanx", size: 4, opcode: two(0xF000, 0x481F), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fgetmanx", size: 4, opcode: two(0xF000, 0x001F), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fintb",    size: 4, opcode: two(0xF000, 0x5801), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fintb",    size: 4, opcode: two(0xF000, 0x5801), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintd",    size: 4, opcode: two(0xF000, 0x0001), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fintd",    size: 4, opcode: two(0xF000, 0x0001), mask: two(0xF1C0, 0xE07F), args: "IiFt", arch: arch::CFLOAT},
    OpCode{name: "fintd",    size: 4, opcode: two(0xF000, 0x5401), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fintd",    size: 4, opcode: two(0xF000, 0x5401), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fintl",    size: 4, opcode: two(0xF000, 0x4001), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fintl",    size: 4, opcode: two(0xF000, 0x4001), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintp",    size: 4, opcode: two(0xF000, 0x4C01), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fints",    size: 4, opcode: two(0xF000, 0x4401), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fints",    size: 4, opcode: two(0xF000, 0x4401), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintw",    size: 4, opcode: two(0xF000, 0x5001), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fintw",    size: 4, opcode: two(0xF000, 0x5001), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintx",    size: 4, opcode: two(0xF000, 0x0001), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fintx",    size: 4, opcode: two(0xF000, 0x4801), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fintx",    size: 4, opcode: two(0xF000, 0x0001), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fintrzb",  size: 4, opcode: two(0xF000, 0x5803), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzb",  size: 4, opcode: two(0xF000, 0x5803), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintrzd",  size: 4, opcode: two(0xF000, 0x0003), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fintrzd",  size: 4, opcode: two(0xF000, 0x0003), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fintrzd",  size: 4, opcode: two(0xF000, 0x5403), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzd",  size: 4, opcode: two(0xF000, 0x5403), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fintrzl",  size: 4, opcode: two(0xF000, 0x4003), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzl",  size: 4, opcode: two(0xF000, 0x4003), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintrzp",  size: 4, opcode: two(0xF000, 0x4C03), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzs",  size: 4, opcode: two(0xF000, 0x4403), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzs",  size: 4, opcode: two(0xF000, 0x4403), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintrzw",  size: 4, opcode: two(0xF000, 0x5003), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzw",  size: 4, opcode: two(0xF000, 0x5003), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fintrzx",  size: 4, opcode: two(0xF000, 0x0003), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fintrzx",  size: 4, opcode: two(0xF000, 0x4803), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fintrzx",  size: 4, opcode: two(0xF000, 0x0003), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "flog10b",  size: 4, opcode: two(0xF000, 0x5815), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "flog10d",  size: 4, opcode: two(0xF000, 0x5415), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "flog10l",  size: 4, opcode: two(0xF000, 0x4015), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "flog10p",  size: 4, opcode: two(0xF000, 0x4C15), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "flog10s",  size: 4, opcode: two(0xF000, 0x4415), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "flog10w",  size: 4, opcode: two(0xF000, 0x5015), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "flog10x",  size: 4, opcode: two(0xF000, 0x0015), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "flog10x",  size: 4, opcode: two(0xF000, 0x4815), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "flog10x",  size: 4, opcode: two(0xF000, 0x0015), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "flog2b",   size: 4, opcode: two(0xF000, 0x5816), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "flog2d",   size: 4, opcode: two(0xF000, 0x5416), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "flog2l",   size: 4, opcode: two(0xF000, 0x4016), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "flog2p",   size: 4, opcode: two(0xF000, 0x4C16), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "flog2s",   size: 4, opcode: two(0xF000, 0x4416), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "flog2w",   size: 4, opcode: two(0xF000, 0x5016), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "flog2x",   size: 4, opcode: two(0xF000, 0x0016), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "flog2x",   size: 4, opcode: two(0xF000, 0x4816), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "flog2x",   size: 4, opcode: two(0xF000, 0x0016), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "flognb",   size: 4, opcode: two(0xF000, 0x5814), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "flognd",   size: 4, opcode: two(0xF000, 0x5414), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "flognl",   size: 4, opcode: two(0xF000, 0x4014), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "flognp",   size: 4, opcode: two(0xF000, 0x4C14), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "flogns",   size: 4, opcode: two(0xF000, 0x4414), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "flognw",   size: 4, opcode: two(0xF000, 0x5014), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "flognx",   size: 4, opcode: two(0xF000, 0x0014), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "flognx",   size: 4, opcode: two(0xF000, 0x4814), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "flognx",   size: 4, opcode: two(0xF000, 0x0014), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "flognp1b", size: 4, opcode: two(0xF000, 0x5806), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1d", size: 4, opcode: two(0xF000, 0x5406), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1l", size: 4, opcode: two(0xF000, 0x4006), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1p", size: 4, opcode: two(0xF000, 0x4C06), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1s", size: 4, opcode: two(0xF000, 0x4406), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1w", size: 4, opcode: two(0xF000, 0x5006), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1x", size: 4, opcode: two(0xF000, 0x0006), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "flognp1x", size: 4, opcode: two(0xF000, 0x4806), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "flognp1x", size: 4, opcode: two(0xF000, 0x0006), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fmodb",  size: 4, opcode: two(0xF000, 0x5821), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fmodd",  size: 4, opcode: two(0xF000, 0x5421), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fmodl",  size: 4, opcode: two(0xF000, 0x4021), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fmodp",  size: 4, opcode: two(0xF000, 0x4C21), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fmods",  size: 4, opcode: two(0xF000, 0x4421), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fmodw",  size: 4, opcode: two(0xF000, 0x5021), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fmodx",  size: 4, opcode: two(0xF000, 0x0021), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fmodx",  size: 4, opcode: two(0xF000, 0x4821), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fmoveb", size: 4, opcode: two(0xF000, 0x5800), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmoveb", size: 4, opcode: two(0xF000, 0x7800), mask: two(0xF1C0, 0xFC7F), args: "IiF7bs", arch: arch::CFLOAT},
    OpCode{name: "fmoveb", size: 4, opcode: two(0xF000, 0x5800), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fmoveb", size: 4, opcode: two(0xF000, 0x7800), mask: two(0xF1C0, 0xFC7F), args: "IiF7$b", arch: arch::MFLOAT},
    OpCode{name: "fmoved", size: 4, opcode: two(0xF000, 0x5400), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fmoved", size: 4, opcode: two(0xF000, 0x7400), mask: two(0xF1C0, 0xFC7F), args: "IiF7~F", arch: arch::MFLOAT},
    OpCode{name: "fmoved", size: 4, opcode: two(0xF000, 0x0000), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fmoved", size: 4, opcode: two(0xF000, 0x5400), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fmoved", size: 4, opcode: two(0xF000, 0x7400), mask: two(0xF1C0, 0xFC7F), args: "IiF7ws", arch: arch::CFLOAT},
    OpCode{name: "fmovel", size: 4, opcode: two(0xF000, 0x4000), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fmovel", size: 4, opcode: two(0xF000, 0x6000), mask: two(0xF1C0, 0xFC7F), args: "IiF7$l", arch: arch::MFLOAT},
    /* FIXME: the next two variants should not permit moving an address
    register to anything but the floating point instruction register.  */
    OpCode{name: "fmovel", size: 4,	opcode: two(0xF000, 0xA000), mask: two(0xF1C0, 0xE3FF), args: "Iis8%s", arch: arch::MFLOAT},
    OpCode{name: "fmovel", size: 4,	opcode: two(0xF000, 0x8000), mask: two(0xF1C0, 0xE3FF), args: "Ii*ls8", arch: arch::MFLOAT},
    OpCode{name: "fmovel", size: 4,	opcode: two(0xF000, 0x4000), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmovel", size: 4,	opcode: two(0xF000, 0x6000), mask: two(0xF1C0, 0xFC7F), args: "IiF7bs", arch: arch::CFLOAT},
    /* Move the FP control registers.  */
    OpCode{name: "fmovel", size: 4, opcode: two(0xF000, 0xA000), mask: two(0xF1C0, 0xE3FF), args: "Iis8ps", arch: arch::CFLOAT},
    OpCode{name: "fmovel", size: 4, opcode: two(0xF000, 0x8000), mask: two(0xF1C0, 0xE3FF), args: "Iibss8", arch: arch::CFLOAT},
    OpCode{name: "fmovep", size: 4, opcode: two(0xF000, 0x4C00), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fmovep", size: 4, opcode: two(0xF000, 0x6C00), mask: two(0xF1C0, 0xFC00), args: "IiF7~pkC", arch: arch::MFLOAT },
    OpCode{name: "fmovep", size: 4, opcode: two(0xF000, 0x7C00), mask: two(0xF1C0, 0xFC0F), args: "IiF7~pDk", arch: arch::MFLOAT },
    OpCode{name: "fmoves", size: 4, opcode: two(0xF000, 0x4400), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fmoves", size: 4, opcode: two(0xF000, 0x6400), mask: two(0xF1C0, 0xFC7F), args: "IiF7$f", arch: arch::MFLOAT},
    OpCode{name: "fmoves", size: 4, opcode: two(0xF000, 0x4400), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmoves", size: 4, opcode: two(0xF000, 0x6400), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fmovew", size: 4, opcode: two(0xF000, 0x5000), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fmovew", size: 4, opcode: two(0xF000, 0x7000), mask: two(0xF1C0, 0xFC7F), args: "IiF7$w", arch: arch::MFLOAT},
    OpCode{name: "fmovew", size: 4, opcode: two(0xF000, 0x5000), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmovew", size: 4, opcode: two(0xF000, 0x7000), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fmovex", size: 4, opcode: two(0xF000, 0x0000), mask: two(0xF1FF, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fmovex", size: 4, opcode: two(0xF000, 0x4800), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fmovex", size: 4, opcode: two(0xF000, 0x6800), mask: two(0xF1C0, 0xFC7F), args: "IiF7~x", arch: arch::MFLOAT},
    OpCode{name: "fsmoveb", size:  4, opcode: two(0xF000, 0x5840), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fsmoveb", size:  4, opcode: two(0xF000, 0x5840), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmoveb", size:  4, opcode: two(0xF000, 0x7840), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fsmoved", size:  4, opcode: two(0xF000, 0x0040), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fsmoved", size:  4, opcode: two(0xF000, 0x5440), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fsmoved", size:  4, opcode: two(0xF000, 0x5440), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmoved", size:  4, opcode: two(0xF000, 0x7440), mask: two(0xF1C0, 0xFC7F), args: "IiF7ws", arch: arch::CFLOAT},
    OpCode{name: "fsmovel", size:  4, opcode: two(0xF000, 0x4040), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fsmovel", size:  4, opcode: two(0xF000, 0x4040), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmovel", size:  4, opcode: two(0xF000, 0x6040), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fsmoves", size:  4, opcode: two(0xF000, 0x4440), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fsmoves", size:  4, opcode: two(0xF000, 0x4440), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmoves", size:  4, opcode: two(0xF000, 0x6440), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fsmovew", size:  4, opcode: two(0xF000, 0x5040), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fsmovew", size:  4, opcode: two(0xF000, 0x5040), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmovew", size:  4, opcode: two(0xF000, 0x7040), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fsmovex", size:  4, opcode: two(0xF000, 0x0040), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fsmovex", size:  4, opcode: two(0xF000, 0x4840), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fsmovep", size:  4, opcode: two(0xF000, 0x4C40), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fdmoveb", size:  4, opcode: two(0xF000, 0x5844), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fdmoveb", size:  4, opcode: two(0xF000, 0x5844), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmoveb", size:  4, opcode: two(0xF000, 0x7844), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fdmoved", size:  4, opcode: two(0xF000, 0x0044), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fdmoved", size:  4, opcode: two(0xF000, 0x5444), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fdmoved", size:  4, opcode: two(0xF000, 0x5444), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmoved", size:  4, opcode: two(0xF000, 0x7444), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fdmovel", size:  4, opcode: two(0xF000, 0x4044), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fdmovel", size:  4, opcode: two(0xF000, 0x4044), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmovel", size:  4, opcode: two(0xF000, 0x6044), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fdmoves", size:  4, opcode: two(0xF000, 0x4444), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fdmoves", size:  4, opcode: two(0xF000, 0x4444), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmoves", size:  4, opcode: two(0xF000, 0x6444), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fdmovew", size:  4, opcode: two(0xF000, 0x5044), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fdmovew", size:  4, opcode: two(0xF000, 0x5044), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmovew", size:  4, opcode: two(0xF000, 0x7044), mask: two(0xF1C0, 0xFC7F), args: "IiF7qs", arch: arch::CFLOAT},
    OpCode{name: "fdmovex", size:  4, opcode: two(0xF000, 0x0044), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fdmovex", size:  4, opcode: two(0xF000, 0x4844), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fdmovep", size:  4, opcode: two(0xF000, 0x4C44), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fmovecrx", size: 4, opcode: two(0xF000, 0x5C00), mask: two(0xF1FF, 0xFC00), args: "Ii#CF7", arch: arch::MFLOAT},
    OpCode{name: "fmovemd",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Iizsl3", arch: arch::CFLOAT},
    OpCode{name: "fmovemd",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Iizs#3", arch: arch::CFLOAT},
    OpCode{name: "fmovemd",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Iil3ys", arch: arch::CFLOAT},
    OpCode{name: "fmovemd",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Ii#3ys", arch: arch::CFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF000, 0xF800), mask: two(0xF1C0, 0xFF8F), args: "IiDk&s", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF020, 0xE800), mask: two(0xF1F8, 0xFF8F), args: "IiDk-s", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF000, 0xD800), mask: two(0xF1C0, 0xFF8F), args: "Ii&sDk", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF018, 0xD800), mask: two(0xF1F8, 0xFF8F), args: "Ii+sDk", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Idl3&s", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Id#3&s", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Id&sl3", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Id&s#3", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF020, 0xE000), mask: two(0xF1F8, 0xFF00), args: "IdL3-s", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF020, 0xE000), mask: two(0xF1F8, 0xFF00), args: "Id#3-s", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF018, 0xD000), mask: two(0xF1F8, 0xFF00), args: "Id+sl3", arch: arch::MFLOAT},
    OpCode{name: "fmovemx",  size: 4, opcode: two(0xF018, 0xD000), mask: two(0xF1F8, 0xFF00), args: "Id+s#3", arch: arch::MFLOAT},
    OpCode{name: "fmoveml",  size: 4, opcode: two(0xF000, 0xA000), mask: two(0xF1C0, 0xE3FF), args: "Iis8%s", arch: arch::MFLOAT},
    OpCode{name: "fmoveml",  size: 4, opcode: two(0xF000, 0xA000), mask: two(0xF1C0, 0xE3FF), args: "IiL8~s", arch: arch::MFLOAT},
    /* FIXME: In the next instruction, we should only permit %dn if the
    target is a single register.  We should only permit %an if the
    target is a single %fpiar.  */
    OpCode{name: "fmoveml", size: 4, opcode: two(0xF000, 0x8000), mask: two(0xF1C0, 0xE3FF), args: "Ii*lL8", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Iizsl3", arch: arch::CFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Iizs#3", arch: arch::CFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Iil3ys", arch: arch::CFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Ii#3ys", arch: arch::CFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF020, 0xE000), mask: two(0xF1F8, 0xFF00), args: "IdL3-s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Idl3&s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF018, 0xD000), mask: two(0xF1F8, 0xFF00), args: "Id+sl3", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Id&sl3", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF020, 0xE000), mask: two(0xF1F8, 0xFF00), args: "Id#3-s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF020, 0xE800), mask: two(0xF1F8, 0xFF8F), args: "IiDk-s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xF000), mask: two(0xF1C0, 0xFF00), args: "Id#3&s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xF800), mask: two(0xF1C0, 0xFF8F), args: "IiDk&s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF018, 0xD000), mask: two(0xF1F8, 0xFF00), args: "Id+s#3", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF018, 0xD800), mask: two(0xF1F8, 0xFF8F), args: "Ii+sDk", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xD000), mask: two(0xF1C0, 0xFF00), args: "Id&s#3", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xD800), mask: two(0xF1C0, 0xFF8F), args: "Ii&sDk", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xA000), mask: two(0xF1C0, 0xE3FF), args: "Iis8%s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0x8000), mask: two(0xF1C0, 0xE3FF), args: "Ii*ss8", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0xA000), mask: two(0xF1C0, 0xE3FF), args: "IiL8~s", arch: arch::MFLOAT},
    OpCode{name: "fmovem",  size: 4, opcode: two(0xF000, 0x8000), mask: two(0xF2C0, 0xE3FF), args: "Ii*sL8", arch: arch::MFLOAT},
    OpCode{name: "fmulb",   size: 4, opcode: two(0xF000, 0x5823), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fmulb",   size: 4, opcode: two(0xF000, 0x5823), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmuld",   size: 4, opcode: two(0xF000, 0x0023), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fmuld",   size: 4, opcode: two(0xF000, 0x5423), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fmuld",   size: 4, opcode: two(0xF000, 0x5423), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fmull",   size: 4, opcode: two(0xF000, 0x4023), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fmull",   size: 4, opcode: two(0xF000, 0x4023), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmulp",   size: 4, opcode: two(0xF000, 0x4C23), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fmuls",   size: 4, opcode: two(0xF000, 0x4423), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fmuls",   size: 4, opcode: two(0xF000, 0x4423), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmulw",   size: 4, opcode: two(0xF000, 0x5023), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fmulw",   size: 4, opcode: two(0xF000, 0x5023), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fmulx",   size: 4, opcode: two(0xF000, 0x0023), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fmulx",   size: 4, opcode: two(0xF000, 0x4823), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsmulb",  size: 4, opcode: two(0xF000, 0x5863), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fsmulb",  size: 4, opcode: two(0xF000, 0x5863), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmuld",  size: 4, opcode: two(0xF000, 0x0063), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fsmuld",  size: 4, opcode: two(0xF000, 0x5463), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fsmuld",  size: 4, opcode: two(0xF000, 0x5463), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmull",  size: 4, opcode: two(0xF000, 0x4063), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fsmull",  size: 4, opcode: two(0xF000, 0x4063), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmulp",  size: 4, opcode: two(0xF000, 0x4C63), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fsmuls",  size: 4, opcode: two(0xF000, 0x4463), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fsmuls",  size: 4, opcode: two(0xF000, 0x4463), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmulw",  size: 4, opcode: two(0xF000, 0x5063), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fsmulw",  size: 4, opcode: two(0xF000, 0x5063), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsmulx",  size: 4, opcode: two(0xF000, 0x0063), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fsmulx",  size: 4, opcode: two(0xF000, 0x4863), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fdmulb",  size: 4, opcode: two(0xF000, 0x5867), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fdmulb",  size: 4, opcode: two(0xF000, 0x5867), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmuld",  size: 4, opcode: two(0xF000, 0x0067), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fdmuld",  size: 4, opcode: two(0xF000, 0x5467), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fdmuld",  size: 4, opcode: two(0xF000, 0x5467), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmull",  size: 4, opcode: two(0xF000, 0x4067), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fdmull",  size: 4, opcode: two(0xF000, 0x4067), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmulp",  size: 4, opcode: two(0xF000, 0x4C67), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fdmuls",  size: 4, opcode: two(0xF000, 0x4467), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fdmuls",  size: 4, opcode: two(0xF000, 0x4467), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmulw",  size: 4, opcode: two(0xF000, 0x5067), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fdmulw",  size: 4, opcode: two(0xF000, 0x5067), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdmulx",  size: 4, opcode: two(0xF000, 0x0067), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fdmulx",  size: 4, opcode: two(0xF000, 0x4867), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fnegb",   size: 4, opcode: two(0xF000, 0x581A), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fnegb",   size: 4, opcode: two(0xF000, 0x581A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fnegd",   size: 4, opcode: two(0xF000, 0x001A), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fnegd",   size: 4, opcode: two(0xF000, 0x001A), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fnegd",   size: 4, opcode: two(0xF000, 0x541A), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fnegd",   size: 4, opcode: two(0xF000, 0x541A), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fnegl",   size: 4, opcode: two(0xF000, 0x401A), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fnegl",   size: 4, opcode: two(0xF000, 0x401A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fnegp",   size: 4, opcode: two(0xF000, 0x4C1A), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fnegs",   size: 4, opcode: two(0xF000, 0x441A), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fnegs",   size: 4, opcode: two(0xF000, 0x441A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fnegw",   size: 4, opcode: two(0xF000, 0x501A), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fnegw",   size: 4, opcode: two(0xF000, 0x501A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fnegx",   size: 4, opcode: two(0xF000, 0x001A), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fnegx",   size: 4, opcode: two(0xF000, 0x481A), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fnegx",   size: 4, opcode: two(0xF000, 0x001A), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fsnegb",  size: 4, opcode: two(0xF000, 0x585A), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fsnegb",  size: 4, opcode: two(0xF000, 0x585A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsnegd",  size: 4, opcode: two(0xF000, 0x005A), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fsnegd",  size: 4, opcode: two(0xF000, 0x005A), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fsnegd",  size: 4, opcode: two(0xF000, 0x545A), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fsnegd",  size: 4, opcode: two(0xF000, 0x545A), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fsnegl",  size: 4, opcode: two(0xF000, 0x405A), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fsnegl",  size: 4, opcode: two(0xF000, 0x405A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsnegp",  size: 4, opcode: two(0xF000, 0x4C5A), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fsnegs",  size: 4, opcode: two(0xF000, 0x445A), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fsnegs",  size: 4, opcode: two(0xF000, 0x445A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsnegw",  size: 4, opcode: two(0xF000, 0x505A), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fsnegw",  size: 4, opcode: two(0xF000, 0x505A), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsnegx",  size: 4, opcode: two(0xF000, 0x005A), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fsnegx",  size: 4, opcode: two(0xF000, 0x485A), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fsnegx",  size: 4, opcode: two(0xF000, 0x005A), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "fdnegb",  size: 4, opcode: two(0xF000, 0x585E), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fdnegb",  size: 4, opcode: two(0xF000, 0x585E), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdnegd",  size: 4, opcode: two(0xF000, 0x005E), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fdnegd",  size: 4, opcode: two(0xF000, 0x005E), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fdnegd",  size: 4, opcode: two(0xF000, 0x545E), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fdnegd",  size: 4, opcode: two(0xF000, 0x545E), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fdnegl",  size: 4, opcode: two(0xF000, 0x405E), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fdnegl",  size: 4, opcode: two(0xF000, 0x405E), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdnegp",  size: 4, opcode: two(0xF000, 0x4C5E), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fdnegs",  size: 4, opcode: two(0xF000, 0x445E), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fdnegs",  size: 4, opcode: two(0xF000, 0x445E), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdnegw",  size: 4, opcode: two(0xF000, 0x505E), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fdnegw",  size: 4, opcode: two(0xF000, 0x505E), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdnegx",  size: 4, opcode: two(0xF000, 0x005E), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fdnegx",  size: 4, opcode: two(0xF000, 0x485E), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fdnegx",  size: 4, opcode: two(0xF000, 0x005E), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "fremb",   size: 4, opcode: two(0xF000, 0x5825), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fremd",   size: 4, opcode: two(0xF000, 0x5425), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "freml",   size: 4, opcode: two(0xF000, 0x4025), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fremp",   size: 4, opcode: two(0xF000, 0x4C25), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "frems",   size: 4, opcode: two(0xF000, 0x4425), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fremw",   size: 4, opcode: two(0xF000, 0x5025), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fremx",   size: 4, opcode: two(0xF000, 0x0025), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fremx",   size: 4, opcode: two(0xF000, 0x4825), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "frestore", size: 2, opcode: one(0xF140),              mask: one(0xF1C0), args: "Id<s", arch: arch::MFLOAT},
    OpCode{name: "frestore", size: 2, opcode: one(0xF140),              mask: one(0xF1C0), args: "Idys", arch: arch::CFLOAT},
    OpCode{name: "fsave",    size: 2, opcode: one(0xF100),              mask: one(0xF1C0), args: "Id>s", arch: arch::MFLOAT},
    OpCode{name: "fsave",    size: 2, opcode: one(0xF100),              mask: one(0xF1C0), args: "Idzs", arch: arch::CFLOAT},
    OpCode{name: "fscaleb",  size: 4, opcode: two(0xF000, 0x5826), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fscaled",  size: 4, opcode: two(0xF000, 0x5426), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fscalel",  size: 4, opcode: two(0xF000, 0x4026), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fscalep",  size: 4, opcode: two(0xF000, 0x4C26), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fscales",  size: 4, opcode: two(0xF000, 0x4426), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fscalew",  size: 4, opcode: two(0xF000, 0x5026), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fscalex",  size: 4, opcode: two(0xF000, 0x0026), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fscalex",  size: 4, opcode: two(0xF000, 0x4826), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    /* $ is necessary to prevent the assembler from using PC-relative.
    If @ were used, "label: fseq label" could produce "ftrapeq", 2,
    because "label" became "pc@label".  */
    OpCode{name: "fseq",     size: 4, opcode: two(0xF040, 0x0001), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsf",      size: 4, opcode: two(0xF040, 0x0000), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsge",     size: 4, opcode: two(0xF040, 0x0013), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsgl",     size: 4, opcode: two(0xF040, 0x0016), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsgle",    size: 4, opcode: two(0xF040, 0x0017), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsgt",     size: 4, opcode: two(0xF040, 0x0012), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsle",     size: 4, opcode: two(0xF040, 0x0015), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fslt",     size: 4, opcode: two(0xF040, 0x0014), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsne",     size: 4, opcode: two(0xF040, 0x000E), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsnge",    size: 4, opcode: two(0xF040, 0x001C), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsngl",    size: 4, opcode: two(0xF040, 0x0019), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsngle",   size: 4, opcode: two(0xF040, 0x0018), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsngt",    size: 4, opcode: two(0xF040, 0x001D), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsnle",    size: 4, opcode: two(0xF040, 0x001A), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsnlt",    size: 4, opcode: two(0xF040, 0x001B), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsoge",    size: 4, opcode: two(0xF040, 0x0003), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsogl",    size: 4, opcode: two(0xF040, 0x0006), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsogt",    size: 4, opcode: two(0xF040, 0x0002), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsole",    size: 4, opcode: two(0xF040, 0x0005), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsolt",    size: 4, opcode: two(0xF040, 0x0004), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsor",     size: 4, opcode: two(0xF040, 0x0007), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsseq",    size: 4, opcode: two(0xF040, 0x0011), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fssf",     size: 4, opcode: two(0xF040, 0x0010), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fssne",    size: 4, opcode: two(0xF040, 0x001E), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsst",     size: 4, opcode: two(0xF040, 0x001F), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fst",      size: 4, opcode: two(0xF040, 0x000F), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsueq",    size: 4, opcode: two(0xF040, 0x0009), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsuge",    size: 4, opcode: two(0xF040, 0x000B), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsugt",    size: 4, opcode: two(0xF040, 0x000A), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsule",    size: 4, opcode: two(0xF040, 0x000D), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsult",    size: 4, opcode: two(0xF040, 0x000C), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsun",     size: 4, opcode: two(0xF040, 0x0008), mask: two(0xF1C0, 0xFFFF), args: "Ii$s", arch: arch::MFLOAT},
    OpCode{name: "fsgldivb", size: 4, opcode: two(0xF000, 0x5824), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivd", size: 4, opcode: two(0xF000, 0x5424), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivl", size: 4, opcode: two(0xF000, 0x4024), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivp", size: 4, opcode: two(0xF000, 0x4C24), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivs", size: 4, opcode: two(0xF000, 0x4424), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivw", size: 4, opcode: two(0xF000, 0x5024), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivx", size: 4, opcode: two(0xF000, 0x0024), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivx", size: 4, opcode: two(0xF000, 0x4824), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsgldivx", size: 4, opcode: two(0xF000, 0x0024), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fsglmulb", size: 4, opcode: two(0xF000, 0x5827), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmuld", size: 4, opcode: two(0xF000, 0x5427), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmull", size: 4, opcode: two(0xF000, 0x4027), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmulp", size: 4, opcode: two(0xF000, 0x4C27), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmuls", size: 4, opcode: two(0xF000, 0x4427), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmulw", size: 4, opcode: two(0xF000, 0x5027), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmulx", size: 4, opcode: two(0xF000, 0x0027), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fsglmulx", size: 4, opcode: two(0xF000, 0x4827), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsglmulx", size: 4, opcode: two(0xF000, 0x0027), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fsinb",    size: 4, opcode: two(0xF000, 0x580E), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fsind",    size: 4, opcode: two(0xF000, 0x540E), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fsinl",    size: 4, opcode: two(0xF000, 0x400E), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fsinp",    size: 4, opcode: two(0xF000, 0x4C0E), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fsins",    size: 4, opcode: two(0xF000, 0x440E), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fsinw",    size: 4, opcode: two(0xF000, 0x500E), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fsinx",    size: 4, opcode: two(0xF000, 0x000E), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fsinx",    size: 4, opcode: two(0xF000, 0x480E), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsinx",    size: 4, opcode: two(0xF000, 0x000E), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fsincosb", size: 4, opcode: two(0xF000, 0x5830), mask: two(0xF1C0, 0xFC78), args: "Ii;bF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincosd", size: 4, opcode: two(0xF000, 0x5430), mask: two(0xF1C0, 0xFC78), args: "Ii;FF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincosl", size: 4, opcode: two(0xF000, 0x4030), mask: two(0xF1C0, 0xFC78), args: "Ii;lF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincosp", size: 4, opcode: two(0xF000, 0x4C30), mask: two(0xF1C0, 0xFC78), args: "Ii;pF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincoss", size: 4, opcode: two(0xF000, 0x4430), mask: two(0xF1C0, 0xFC78), args: "Ii;fF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincosw", size: 4, opcode: two(0xF000, 0x5030), mask: two(0xF1C0, 0xFC78), args: "Ii;wF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincosx", size: 4, opcode: two(0xF000, 0x0030), mask: two(0xF1C0, 0xE078), args: "IiF8F3F7", arch: arch::MFLOAT},
    OpCode{name: "fsincosx", size: 4, opcode: two(0xF000, 0x4830), mask: two(0xF1C0, 0xFC78), args: "Ii;xF3F7", arch: arch::MFLOAT},
    OpCode{name: "fsinhb",   size: 4, opcode: two(0xF000, 0x5802), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhd",   size: 4, opcode: two(0xF000, 0x5402), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhl",   size: 4, opcode: two(0xF000, 0x4002), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhp",   size: 4, opcode: two(0xF000, 0x4C02), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhs",   size: 4, opcode: two(0xF000, 0x4402), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhw",   size: 4, opcode: two(0xF000, 0x5002), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhx",   size: 4, opcode: two(0xF000, 0x0002), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fsinhx",   size: 4, opcode: two(0xF000, 0x4802), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsinhx",   size: 4, opcode: two(0xF000, 0x0002), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fsqrtb",   size: 4, opcode: two(0xF000, 0x5804), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrtb",   size: 4, opcode: two(0xF000, 0x5804), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsqrtd",   size: 4, opcode: two(0xF000, 0x0004), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fsqrtd",   size: 4, opcode: two(0xF000, 0x0004), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fsqrtd",   size: 4, opcode: two(0xF000, 0x5404), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrtd",   size: 4, opcode: two(0xF000, 0x5404), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fsqrtl",   size: 4, opcode: two(0xF000, 0x4004), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrtl",   size: 4, opcode: two(0xF000, 0x4004), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsqrtp",   size: 4, opcode: two(0xF000, 0x4C04), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrts",   size: 4, opcode: two(0xF000, 0x4404), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrts",   size: 4, opcode: two(0xF000, 0x4404), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsqrtw",   size: 4, opcode: two(0xF000, 0x5004), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrtw",   size: 4, opcode: two(0xF000, 0x5004), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsqrtx",   size: 4, opcode: two(0xF000, 0x0004), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fsqrtx",   size: 4, opcode: two(0xF000, 0x4804), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsqrtx",   size: 4, opcode: two(0xF000, 0x0004), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fssqrtb",  size: 4, opcode: two(0xF000, 0x5841), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fssqrtb",  size: 4, opcode: two(0xF000, 0x5841), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssqrtd",  size: 4, opcode: two(0xF000, 0x0041), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fssqrtd",  size: 4, opcode: two(0xF000, 0x0041), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fssqrtd",  size: 4, opcode: two(0xF000, 0x5441), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fssqrtd",  size: 4, opcode: two(0xF000, 0x5441), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fssqrtl",  size: 4, opcode: two(0xF000, 0x4041), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fssqrtl",  size: 4, opcode: two(0xF000, 0x4041), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssqrtp",  size: 4, opcode: two(0xF000, 0x4C41), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fssqrts",  size: 4, opcode: two(0xF000, 0x4441), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fssqrts",  size: 4, opcode: two(0xF000, 0x4441), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssqrtw",  size: 4, opcode: two(0xF000, 0x5041), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fssqrtw",  size: 4, opcode: two(0xF000, 0x5041), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssqrtx",  size: 4, opcode: two(0xF000, 0x0041), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fssqrtx",  size: 4, opcode: two(0xF000, 0x4841), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fssqrtx",  size: 4, opcode: two(0xF000, 0x0041), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "fdsqrtb",  size: 4, opcode: two(0xF000, 0x5845), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrtb",  size: 4, opcode: two(0xF000, 0x5845), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsqrtd",  size: 4, opcode: two(0xF000, 0x0045), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fdsqrtd",  size: 4, opcode: two(0xF000, 0x0045), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::CFLOAT},
    OpCode{name: "fdsqrtd",  size: 4, opcode: two(0xF000, 0x5445), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrtd",  size: 4, opcode: two(0xF000, 0x5445), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsqrtl",  size: 4, opcode: two(0xF000, 0x4045), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrtl",  size: 4, opcode: two(0xF000, 0x4045), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsqrtp",  size: 4, opcode: two(0xF000, 0x4C45), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrts",  size: 4, opcode: two(0xF000, 0x4445), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrts",  size: 4, opcode: two(0xF000, 0x4445), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsqrtw",  size: 4, opcode: two(0xF000, 0x5045), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrtw",  size: 4, opcode: two(0xF000, 0x5045), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsqrtx",  size: 4, opcode: two(0xF000, 0x0045), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fdsqrtx",  size: 4, opcode: two(0xF000, 0x4845), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fdsqrtx",  size: 4, opcode: two(0xF000, 0x0045), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "fsubb",    size: 4, opcode: two(0xF000, 0x5828), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "fsubb",    size: 4, opcode: two(0xF000, 0x5828), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsubd",    size: 4, opcode: two(0xF000, 0x0028), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fsubd",    size: 4, opcode: two(0xF000, 0x5428), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "fsubd",    size: 4, opcode: two(0xF000, 0x5428), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fsubl",    size: 4, opcode: two(0xF000, 0x4028), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "fsubl",    size: 4, opcode: two(0xF000, 0x4028), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsubp",    size: 4, opcode: two(0xF000, 0x4C28), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "fsubs",    size: 4, opcode: two(0xF000, 0x4428), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "fsubs",    size: 4, opcode: two(0xF000, 0x4428), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsubw",    size: 4, opcode: two(0xF000, 0x5028), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "fsubw",    size: 4, opcode: two(0xF000, 0x5028), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fsubx",    size: 4, opcode: two(0xF000, 0x0028), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "fsubx",    size: 4, opcode: two(0xF000, 0x4828), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "fsubx",    size: 4, opcode: two(0xF000, 0x0028), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "fssubb",   size: 4, opcode: two(0xF000, 0x5868), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssubb",   size: 4, opcode: two(0xF000, 0x5868), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fssubd",   size: 4, opcode: two(0xF000, 0x0068), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fssubd",   size: 4, opcode: two(0xF000, 0x5468), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fssubd",   size: 4, opcode: two(0xF000, 0x5468), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fssubl",   size: 4, opcode: two(0xF000, 0x4068), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fssubl",   size: 4, opcode: two(0xF000, 0x4068), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssubp",   size: 4, opcode: two(0xF000, 0x4C68), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fssubs",   size: 4, opcode: two(0xF000, 0x4468), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fssubs",   size: 4, opcode: two(0xF000, 0x4468), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssubw",   size: 4, opcode: two(0xF000, 0x5068), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fssubw",   size: 4, opcode: two(0xF000, 0x5068), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fssubx",   size: 4, opcode: two(0xF000, 0x0068), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fssubx",   size: 4, opcode: two(0xF000, 0x4868), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fssubx",   size: 4, opcode: two(0xF000, 0x0068), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "fdsubb",   size: 4, opcode: two(0xF000, 0x586c), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsubb",   size: 4, opcode: two(0xF000, 0x586c), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::M68040UP},
    OpCode{name: "fdsubd",   size: 4, opcode: two(0xF000, 0x006c), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::CFLOAT},
    OpCode{name: "fdsubd",   size: 4, opcode: two(0xF000, 0x546c), mask: two(0xF1C0, 0xFC7F), args: "IiwsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsubd",   size: 4, opcode: two(0xF000, 0x546c), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::M68040UP},
    OpCode{name: "fdsubl",   size: 4, opcode: two(0xF000, 0x406c), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsubl",   size: 4, opcode: two(0xF000, 0x406c), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::M68040UP},
    OpCode{name: "fdsubp",   size: 4, opcode: two(0xF000, 0x4C6c), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::M68040UP},
    OpCode{name: "fdsubs",   size: 4, opcode: two(0xF000, 0x446c), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsubs",   size: 4, opcode: two(0xF000, 0x446c), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::M68040UP},
    OpCode{name: "fdsubw",   size: 4, opcode: two(0xF000, 0x506c), mask: two(0xF1C0, 0xFC7F), args: "IibsF7", arch: arch::CFLOAT},
    OpCode{name: "fdsubw",   size: 4, opcode: two(0xF000, 0x506c), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::M68040UP},
    OpCode{name: "fdsubx",   size: 4, opcode: two(0xF000, 0x006c), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::M68040UP},
    OpCode{name: "fdsubx",   size: 4, opcode: two(0xF000, 0x486c), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::M68040UP},
    OpCode{name: "fdsubx",   size: 4, opcode: two(0xF000, 0x006c), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::M68040UP},
    OpCode{name: "ftanb",    size: 4, opcode: two(0xF000, 0x580F), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "ftand",    size: 4, opcode: two(0xF000, 0x540F), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "ftanl",    size: 4, opcode: two(0xF000, 0x400F), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "ftanp",    size: 4, opcode: two(0xF000, 0x4C0F), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "ftans",    size: 4, opcode: two(0xF000, 0x440F), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "ftanw",    size: 4, opcode: two(0xF000, 0x500F), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "ftanx",    size: 4, opcode: two(0xF000, 0x000F), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "ftanx",    size: 4, opcode: two(0xF000, 0x480F), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "ftanx",    size: 4, opcode: two(0xF000, 0x000F), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "ftanhb",   size: 4, opcode: two(0xF000, 0x5809), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhd",   size: 4, opcode: two(0xF000, 0x5409), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhl",   size: 4, opcode: two(0xF000, 0x4009), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhp",   size: 4, opcode: two(0xF000, 0x4C09), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhs",   size: 4, opcode: two(0xF000, 0x4409), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhw",   size: 4, opcode: two(0xF000, 0x5009), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhx",   size: 4, opcode: two(0xF000, 0x0009), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "ftanhx",   size: 4, opcode: two(0xF000, 0x4809), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "ftanhx",   size: 4, opcode: two(0xF000, 0x0009), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "ftentoxb", size: 4, opcode: two(0xF000, 0x5812), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxd", size: 4, opcode: two(0xF000, 0x5412), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxl", size: 4, opcode: two(0xF000, 0x4012), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxp", size: 4, opcode: two(0xF000, 0x4C12), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxs", size: 4, opcode: two(0xF000, 0x4412), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxw", size: 4, opcode: two(0xF000, 0x5012), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxx", size: 4, opcode: two(0xF000, 0x0012), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxx", size: 4, opcode: two(0xF000, 0x4812), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "ftentoxx", size: 4, opcode: two(0xF000, 0x0012), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "ftrapeq",  size: 4, opcode: two(0xF07C, 0x0001), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapf",   size: 4, opcode: two(0xF07C, 0x0000), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapge",  size: 4, opcode: two(0xF07C, 0x0013), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapgl",  size: 4, opcode: two(0xF07C, 0x0016), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapgle", size: 4, opcode: two(0xF07C, 0x0017), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapgt",  size: 4, opcode: two(0xF07C, 0x0012), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftraple",  size: 4, opcode: two(0xF07C, 0x0015), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftraplt",  size: 4, opcode: two(0xF07C, 0x0014), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapne",  size: 4, opcode: two(0xF07C, 0x000E), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapnge", size: 4, opcode: two(0xF07C, 0x001C), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapngl", size: 4, opcode: two(0xF07C, 0x0019), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapngle",  size: 4, opcode: two(0xF07C, 0x0018), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapngt",   size: 4, opcode: two(0xF07C, 0x001D), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapnle",   size: 4, opcode: two(0xF07C, 0x001A), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapnlt",   size: 4, opcode: two(0xF07C, 0x001B), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapoge",   size: 4, opcode: two(0xF07C, 0x0003), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapogl",   size: 4, opcode: two(0xF07C, 0x0006), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapogt",   size: 4, opcode: two(0xF07C, 0x0002), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapole",   size: 4, opcode: two(0xF07C, 0x0005), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapolt",   size: 4, opcode: two(0xF07C, 0x0004), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapor",    size: 4, opcode: two(0xF07C, 0x0007), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapseq",   size: 4, opcode: two(0xF07C, 0x0011), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapsf",    size: 4, opcode: two(0xF07C, 0x0010), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapsne",   size: 4, opcode: two(0xF07C, 0x001E), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapst",    size: 4, opcode: two(0xF07C, 0x001F), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapt",     size: 4, opcode: two(0xF07C, 0x000F), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapueq",   size: 4, opcode: two(0xF07C, 0x0009), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapuge",   size: 4, opcode: two(0xF07C, 0x000B), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapugt",   size: 4, opcode: two(0xF07C, 0x000A), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapule",   size: 4, opcode: two(0xF07C, 0x000D), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapult",   size: 4, opcode: two(0xF07C, 0x000C), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapun",    size: 4, opcode: two(0xF07C, 0x0008), mask: two(0xF1FF, 0xFFFF), args: "Ii", arch: arch::MFLOAT},
    OpCode{name: "ftrapeqw",   size: 4, opcode: two(0xF07A, 0x0001), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapfw",    size: 4, opcode: two(0xF07A, 0x0000), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapgew",   size: 4, opcode: two(0xF07A, 0x0013), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapglw",   size: 4, opcode: two(0xF07A, 0x0016), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapglew",  size: 4, opcode: two(0xF07A, 0x0017), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapgtw",   size: 4, opcode: two(0xF07A, 0x0012), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftraplew",   size: 4, opcode: two(0xF07A, 0x0015), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapltw",   size: 4, opcode: two(0xF07A, 0x0014), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapnew",   size: 4, opcode: two(0xF07A, 0x000E), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapngew",  size: 4, opcode: two(0xF07A, 0x001C), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapnglw",  size: 4, opcode: two(0xF07A, 0x0019), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapnglew", size: 4, opcode: two(0xF07A, 0x0018), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapngtw",  size: 4, opcode: two(0xF07A, 0x001D), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapnlew",  size: 4, opcode: two(0xF07A, 0x001A), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapnltw",  size: 4, opcode: two(0xF07A, 0x001B), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapogew",  size: 4, opcode: two(0xF07A, 0x0003), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapoglw",  size: 4, opcode: two(0xF07A, 0x0006), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapogtw",  size: 4, opcode: two(0xF07A, 0x0002), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapolew",  size: 4, opcode: two(0xF07A, 0x0005), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapoltw",  size: 4, opcode: two(0xF07A, 0x0004), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftraporw",   size: 4, opcode: two(0xF07A, 0x0007), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapseqw",  size: 4, opcode: two(0xF07A, 0x0011), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapsfw",   size: 4, opcode: two(0xF07A, 0x0010), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapsnew",  size: 4, opcode: two(0xF07A, 0x001E), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapstw",   size: 4, opcode:	two(0xF07A, 0x001F), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftraptw",    size: 4, opcode:	two(0xF07A, 0x000F), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapueqw",  size: 4, opcode: two(0xF07A, 0x0009), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapugew",  size: 4, opcode: two(0xF07A, 0x000B), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapugtw",  size: 4, opcode: two(0xF07A, 0x000A), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapulew",  size: 4, opcode: two(0xF07A, 0x000D), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapultw",  size: 4, opcode: two(0xF07A, 0x000C), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapunw",   size: 4, opcode:	two(0xF07A, 0x0008), mask: two(0xF1FF, 0xFFFF), args: "Ii^w", arch: arch::MFLOAT},
    OpCode{name: "ftrapeql",   size: 4, opcode:	two(0xF07B, 0x0001), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapfl",    size: 4, opcode:	two(0xF07B, 0x0000), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapgel",   size: 4, opcode:	two(0xF07B, 0x0013), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapgll",   size: 4, opcode:	two(0xF07B, 0x0016), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapglel",  size: 4, opcode: two(0xF07B, 0x0017), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapgtl",   size: 4, opcode:	two(0xF07B, 0x0012), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftraplel",   size: 4, opcode:	two(0xF07B, 0x0015), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapltl",   size: 4, opcode:	two(0xF07B, 0x0014), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapnel",   size: 4, opcode:	two(0xF07B, 0x000E), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapngel",  size: 4, opcode: two(0xF07B, 0x001C), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapngll",  size: 4, opcode: two(0xF07B, 0x0019), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapnglel", size: 4, opcode: two(0xF07B, 0x0018), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapngtl",  size: 4, opcode: two(0xF07B, 0x001D), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapnlel",  size: 4, opcode: two(0xF07B, 0x001A), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapnltl",  size: 4, opcode: two(0xF07B, 0x001B), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapogel",  size: 4, opcode: two(0xF07B, 0x0003), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapogll",  size: 4, opcode: two(0xF07B, 0x0006), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapogtl",  size: 4, opcode: two(0xF07B, 0x0002), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapolel",  size: 4, opcode: two(0xF07B, 0x0005), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapoltl",  size: 4, opcode: two(0xF07B, 0x0004), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftraporl",   size: 4, opcode:	two(0xF07B, 0x0007), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapseql",  size: 4, opcode: two(0xF07B, 0x0011), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapsfl",   size: 4, opcode:	two(0xF07B, 0x0010), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapsnel",  size: 4, opcode: two(0xF07B, 0x001E), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapstl",   size: 4, opcode:	two(0xF07B, 0x001F), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftraptl",    size: 4, opcode:	two(0xF07B, 0x000F), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapueql",  size: 4, opcode: two(0xF07B, 0x0009), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapugel",  size: 4, opcode: two(0xF07B, 0x000B), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapugtl",  size: 4, opcode: two(0xF07B, 0x000A), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapulel",  size: 4, opcode: two(0xF07B, 0x000D), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapultl",  size: 4, opcode: two(0xF07B, 0x000C), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftrapunl",   size: 4, opcode:	two(0xF07B, 0x0008), mask: two(0xF1FF, 0xFFFF), args: "Ii^l", arch: arch::MFLOAT},
    OpCode{name: "ftstb", size: 4, opcode: two(0xF000, 0x583A), mask: two(0xF1C0, 0xFC7F), args: "Ii;b", arch: arch::MFLOAT},
    OpCode{name: "ftstb", size: 4, opcode: two(0xF000, 0x583A), mask: two(0xF1C0, 0xFC7F), args: "Iibs", arch: arch::CFLOAT},
    OpCode{name: "ftstd", size: 4, opcode: two(0xF000, 0x003A), mask: two(0xF1C0, 0xE07F), args: "IiF8", arch: arch::CFLOAT},
    OpCode{name: "ftstd", size: 4, opcode: two(0xF000, 0x543A), mask: two(0xF1C0, 0xFC7F), args: "Ii;F", arch: arch::MFLOAT},
    OpCode{name: "ftstd", size: 4, opcode: two(0xF000, 0x543A), mask: two(0xF1C0, 0xFC7F), args: "Iibs", arch: arch::CFLOAT},
    OpCode{name: "ftstl", size: 4, opcode: two(0xF000, 0x403A), mask: two(0xF1C0, 0xFC7F), args: "Ii;l", arch: arch::MFLOAT},
    OpCode{name: "ftstl", size: 4, opcode: two(0xF000, 0x403A), mask: two(0xF1C0, 0xFC7F), args: "Iibs", arch: arch::CFLOAT},
    OpCode{name: "ftstp", size: 4, opcode: two(0xF000, 0x4C3A), mask: two(0xF1C0, 0xFC7F), args: "Ii;p", arch: arch::MFLOAT},
    OpCode{name: "ftsts", size: 4, opcode: two(0xF000, 0x443A), mask: two(0xF1C0, 0xFC7F), args: "Ii;f", arch: arch::MFLOAT},
    OpCode{name: "ftsts", size: 4, opcode: two(0xF000, 0x443A), mask: two(0xF1C0, 0xFC7F), args: "Iibs", arch: arch::CFLOAT},
    OpCode{name: "ftstw", size: 4, opcode: two(0xF000, 0x503A), mask: two(0xF1C0, 0xFC7F), args: "Ii;w", arch: arch::MFLOAT},
    OpCode{name: "ftstw", size: 4, opcode: two(0xF000, 0x503A), mask: two(0xF1C0, 0xFC7F), args: "Iibs", arch: arch::CFLOAT},
    OpCode{name: "ftstx", size: 4, opcode: two(0xF000, 0x003A), mask: two(0xF1C0, 0xE07F), args: "IiF8", arch: arch::MFLOAT},
    OpCode{name: "ftstx", size: 4, opcode: two(0xF000, 0x483A), mask: two(0xF1C0, 0xFC7F), args: "Ii;x", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxb", size: 4, opcode: two(0xF000, 0x5811), mask: two(0xF1C0, 0xFC7F), args: "Ii;bF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxd", size: 4, opcode: two(0xF000, 0x5411), mask: two(0xF1C0, 0xFC7F), args: "Ii;FF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxl", size: 4, opcode: two(0xF000, 0x4011), mask: two(0xF1C0, 0xFC7F), args: "Ii;lF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxp", size: 4, opcode: two(0xF000, 0x4C11), mask: two(0xF1C0, 0xFC7F), args: "Ii;pF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxs", size: 4, opcode: two(0xF000, 0x4411), mask: two(0xF1C0, 0xFC7F), args: "Ii;fF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxw", size: 4, opcode: two(0xF000, 0x5011), mask: two(0xF1C0, 0xFC7F), args: "Ii;wF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxx", size: 4, opcode: two(0xF000, 0x0011), mask: two(0xF1C0, 0xE07F), args: "IiF8F7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxx", size: 4, opcode: two(0xF000, 0x4811), mask: two(0xF1C0, 0xFC7F), args: "Ii;xF7", arch: arch::MFLOAT},
    OpCode{name: "ftwotoxx", size: 4, opcode: two(0xF000, 0x0011), mask: two(0xF1C0, 0xE07F), args: "IiFt",   arch: arch::MFLOAT},
    OpCode{name: "halt",     size: 2, opcode: one(0045310),	mask: one(0177777), args: "",   arch: arch::M68060 | arch::MCFISA_A},
    OpCode{name: "illegal",  size: 2, opcode: one(0045374),	mask: one(0177777), args: "",   arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "intouch",  size: 2, opcode: one(0xf428),	mask: one(0xfff8),  args: "As", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "jmp",    size: 2, opcode:	one(0047300),	mask: one(0177700), args: "!s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jra",    size: 2, opcode:	one(0060000),	mask: one(0177400), args: "Bb", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jra",    size: 2, opcode:	one(0047300),	mask: one(0177700), args: "!s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jsr",    size: 2, opcode:	one(0047200),	mask: one(0177700), args: "!s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jbsr",   size: 2, opcode:	one(0060400),	mask: one(0177400), args: "Bs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "jbsr",   size: 2, opcode:	one(0047200),	mask: one(0177700), args: "!s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "lea",    size: 2, opcode:	one(0040700),	mask: one(0170700), args: "!sAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "lpstop", size: 6, opcode:	two(0174000,0000700), mask: two(0177777,0177777), args: "#w", arch: arch::CPU32 | arch::FIDO_A | arch::M68060 },
    OpCode{name: "linkw",  size: 4, opcode:	one(0047120),	mask: one(0177770), args: "As#w", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "linkl",  size: 6, opcode:	one(0044010),	mask: one(0177770), args: "As#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "link",   size: 4, opcode:	one(0047120),	mask: one(0177770), args: "As#W", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "link",   size: 6, opcode:	one(0044010),	mask: one(0177770), args: "As#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "lslb",   size: 2, opcode:	one(0160410),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "lslb",   size: 2, opcode:	one(0160450),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "lslw",   size: 2, opcode:	one(0160510),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "lslw",   size: 2, opcode:	one(0160550),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "lslw",   size: 2, opcode:	one(0161700),	mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "lsll",   size: 2, opcode:	one(0160610),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "lsll",   size: 2, opcode:	one(0160650),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "lsrb",   size: 2, opcode:	one(0160010),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "lsrb",   size: 2, opcode:	one(0160050),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "lsrw",   size: 2, opcode:	one(0160110),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "lsrw",   size: 2, opcode:	one(0160150),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "lsrw",   size: 2, opcode:	one(0161300),	mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "lsrl",   size: 2, opcode:	one(0160210),	mask: one(0170770), args: "QdDs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "lsrl",   size: 2, opcode:	one(0160250),	mask: one(0170770), args: "DdDs", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "macw",   size: 4, opcode: two(0xa080, 0x0000), mask: two(0xf180, 0x0910), args: "uNuoiI4/Rn", arch: arch::MCFMAC},
    OpCode{name: "macw",   size: 4, opcode: two(0xa080, 0x0200), mask: two(0xf180, 0x0910), args: "uNuoMh4/Rn", arch: arch::MCFMAC},
    OpCode{name: "macw",   size: 4, opcode: two(0xa080, 0x0000), mask: two(0xf180, 0x0f10), args: "uNuo4/Rn", arch: arch::MCFMAC},
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0000), mask: two(0xf1b0, 0x0900), args: "uMumiI", arch: arch::MCFMAC},
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0200), mask: two(0xf1b0, 0x0900), args: "uMumMh", arch: arch::MCFMAC},
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0000), mask: two(0xf1b0, 0x0f00), args: "uMum", arch: arch::MCFMAC},
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0000), mask: two(0xf100, 0x0900), args: "uNuoiI4/RneG", arch: arch::MCFEMAC },/* Ry,Rx,SF,<ea>,accX. */
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0200), mask: two(0xf100, 0x0900), args: "uNuoMh4/RneG", arch: arch::MCFEMAC },/* Ry,Rx,+1/-1,<ea>,accX. */
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0000), mask: two(0xf100, 0x0f00), args: "uNuo4/RneG", arch: arch::MCFEMAC },/* Ry,Rx,<ea>,accX. */
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0000), mask: two(0xf130, 0x0900), args: "uMumiIeH", arch: arch::MCFEMAC },/* Ry,Rx,SF,accX. */
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0200), mask: two(0xf130, 0x0900), args: "uMumMheH", arch: arch::MCFEMAC },/* Ry,Rx,+1/-1,accX. */
    OpCode{name: "macw",   size: 4, opcode: two(0xa000, 0x0000), mask: two(0xf130, 0x0f00), args: "uMumeH", arch: arch::MCFEMAC }, /* Ry,Rx,accX. */
    OpCode{name: "macl",   size: 4, opcode: two(0xa080, 0x0800), mask: two(0xf180, 0x0910), args: "RNRoiI4/Rn", arch: arch::MCFMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa080, 0x0a00), mask: two(0xf180, 0x0910), args: "RNRoMh4/Rn", arch: arch::MCFMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa080, 0x0800), mask: two(0xf180, 0x0f10), args: "RNRo4/Rn", arch: arch::MCFMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0800), mask: two(0xf1b0, 0x0b00), args: "RMRmiI", arch: arch::MCFMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0a00), mask: two(0xf1b0, 0x0b00), args: "RMRmMh", arch: arch::MCFMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0800), mask: two(0xf1b0, 0x0900), args: "RMRm", arch: arch::MCFMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0800), mask: two(0xf100, 0x0900), args: "R3R1iI4/RneG", arch: arch::MCFEMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0a00), mask: two(0xf100, 0x0900), args: "R3R1Mh4/RneG", arch: arch::MCFEMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0800), mask: two(0xf100, 0x0f00), args: "R3R14/RneG", arch: arch::MCFEMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0800), mask: two(0xf130, 0x0900), args: "RMRmiIeH", arch: arch::MCFEMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0a00), mask: two(0xf130, 0x0900), args: "RMRmMheH", arch: arch::MCFEMAC},
    OpCode{name: "macl",   size: 4, opcode: two(0xa000, 0x0800), mask: two(0xf130, 0x0f00), args: "RMRmeH", arch: arch::MCFEMAC},
    /* NOTE: The mcf5200 family programmer's reference manual does not
    indicate the byte form of the movea instruction is invalid (as it
    is on 68000 family cpus).  However, experiments on the 5202 yeild
    unexpected results.  The value is copied, but it is not sign extended
    (as is done with movea.w) and the top three bytes in the address
    register are not disturbed.  I don't know if this is the intended
    behavior --- it could be a hole in instruction decoding (Motorola
    decided not to trap all invalid instructions for performance reasons)
    --- but I suspect that it is not.
    I reported this to Motorola ISD Technical Communications Support,
    which replied that other coldfire assemblers reject movea.b.  For
    this reason I've decided to not allow moveab.
        jtc@cygnus.com - 97/01/24.  */
    OpCode{name: "moveal",  size: 2, opcode: one(0020100), mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "moveaw",  size: 2, opcode: one(0030100), mask: one(0170700), args: "*wAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "movclrl", size: 2, opcode: one(0xA1C0),  mask: one(0xf9f0),  args: "eFRs", arch: arch::MCFEMAC},
    OpCode{name: "movec",   size: 4, opcode: one(0047173), mask: one(0177777), args: "R1Jj", arch: arch::M68010UP | arch::MCFISA_A},
    OpCode{name: "movec",   size: 4, opcode: one(0047173), mask: one(0177777), args: "R1#j", arch: arch::M68010UP | arch::MCFISA_A},
    OpCode{name: "movec",   size: 4, opcode: one(0047172), mask: one(0177777), args: "JjR1", arch: arch::M68010UP},
    OpCode{name: "movec",   size: 4, opcode: one(0047172), mask: one(0177777), args: "#jR1", arch: arch::M68010UP},
    OpCode{name: "movemw",  size: 4, opcode: one(0044200), mask: one(0177700), args: "Lw&s", arch: arch::M68000UP},
    OpCode{name: "movemw",  size: 4, opcode: one(0044240), mask: one(0177770), args: "lw-s", arch: arch::M68000UP},
    OpCode{name: "movemw",  size: 4, opcode: one(0044200), mask: one(0177700), args: "#w>s", arch: arch::M68000UP},
    OpCode{name: "movemw",  size: 4, opcode: one(0046200), mask: one(0177700), args: "<sLw", arch: arch::M68000UP},
    OpCode{name: "movemw",  size: 4, opcode: one(0046200), mask: one(0177700), args: "<s#w", arch: arch::M68000UP},
    OpCode{name: "moveml",  size: 4, opcode: one(0044300), mask: one(0177700), args: "Lw&s", arch: arch::M68000UP},
    OpCode{name: "moveml",  size: 4, opcode: one(0044340), mask: one(0177770), args: "lw-s", arch: arch::M68000UP},
    OpCode{name: "moveml",  size: 4, opcode: one(0044300), mask: one(0177700), args: "#w>s", arch: arch::M68000UP},
    OpCode{name: "moveml",  size: 4, opcode: one(0046300), mask: one(0177700), args: "<sLw", arch: arch::M68000UP},
    OpCode{name: "moveml",  size: 4, opcode: one(0046300), mask: one(0177700), args: "<s#w", arch: arch::M68000UP},
    OpCode{name: "moveml",  size: 4, opcode: one(0044300), mask: one(0177700), args: "Lwys", arch: arch::MCFISA_A},
    OpCode{name: "moveml",  size: 4, opcode: one(0044300), mask: one(0177700), args: "#wys", arch: arch::MCFISA_A},
    OpCode{name: "moveml",  size: 4, opcode: one(0046300), mask: one(0177700), args: "ysLw", arch: arch::MCFISA_A},
    OpCode{name: "moveml",  size: 4, opcode: one(0046300), mask: one(0177700), args: "ys#w", arch: arch::MCFISA_A},
    OpCode{name: "movepw",  size: 2, opcode: one(0000410), mask: one(0170770), args: "dsDd", arch: arch::M68000UP},
    OpCode{name: "movepw",  size: 2, opcode: one(0000610), mask: one(0170770), args: "Ddds", arch: arch::M68000UP},
    OpCode{name: "movepl",  size: 2, opcode: one(0000510), mask: one(0170770), args: "dsDd", arch: arch::M68000UP},
    OpCode{name: "movepl",  size: 2, opcode: one(0000710), mask: one(0170770), args: "Ddds", arch: arch::M68000UP},
    OpCode{name: "moveq",   size: 2, opcode: one(0070000), mask: one(0170400), args: "MsDd", arch: arch::M68000UP | arch::MCFISA_A },
    OpCode{name: "moveq",   size: 2, opcode: one(0070000), mask: one(0170400), args: "#BDd", arch: arch::M68000UP | arch::MCFISA_A },
    /* The move opcode can generate the movea and moveq instructions.  */
    OpCode{name: "moveb",   size: 2, opcode: one(0010000), mask: one(0170000), args: ";b$d", arch: arch::M68000UP},
    OpCode{name: "moveb",   size: 2, opcode: one(0010000), mask: one(0170070), args: "Ds$d", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010020), mask: one(0170070), args: "as$d", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010030), mask: one(0170070), args: "+s$d", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010040), mask: one(0170070), args: "-s$d", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010000), mask: one(0170000), args: "nsqd", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010000), mask: one(0170700), args: "obDd", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010200), mask: one(0170700), args: "obad", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010300), mask: one(0170700), args: "ob+d", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010400), mask: one(0170700), args: "ob-d", arch: arch::MCFISA_A},
    OpCode{name: "moveb",   size: 2, opcode: one(0010000), mask: one(0170000), args: "obnd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "movew",   size: 2, opcode: one(0030000), mask: one(0170000), args: "*w%d", arch: arch::M68000UP},
    OpCode{name: "movew",   size: 2, opcode: one(0030000), mask: one(0170000), args: "ms%d", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 2, opcode: one(0030000), mask: one(0170000), args: "nspd", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 2, opcode: one(0030000), mask: one(0170000), args: "owmd", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 2, opcode: one(0030000), mask: one(0170000), args: "ownd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "movew",   size: 2, opcode: one(0040300), mask: one(0177700), args: "Ss$s", arch: arch::M68000UP},
    OpCode{name: "movew",   size: 2, opcode: one(0040300), mask: one(0177770), args: "SsDs", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 2, opcode: one(0041300), mask: one(0177700), args: "Cs$s", arch: arch::M68010UP},
    OpCode{name: "movew",   size: 2, opcode: one(0041300), mask: one(0177770), args: "CsDs", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 2, opcode: one(0042300), mask: one(0177700), args: ";wCd", arch: arch::M68000UP},
    OpCode{name: "movew",   size: 2, opcode: one(0042300), mask: one(0177770), args: "DsCd", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 4, opcode: one(0042374), mask: one(0177777), args: "#wCd", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 2, opcode: one(0043300), mask: one(0177700), args: ";wSd", arch: arch::M68000UP},
    OpCode{name: "movew",   size: 2, opcode: one(0043300), mask: one(0177770), args: "DsSd", arch: arch::MCFISA_A},
    OpCode{name: "movew",   size: 4, opcode: one(0043374), mask: one(0177777), args: "#wSd", arch: arch::MCFISA_A},
    OpCode{name: "movel",   size: 2, opcode: one(0070000), mask: one(0170400), args: "MsDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "movel",   size: 2, opcode: one(0020000), mask: one(0170000), args: "*l%d", arch: arch::M68000UP},
    OpCode{name: "movel",   size: 2, opcode: one(0020000), mask: one(0170000), args: "ms%d", arch: arch::MCFISA_A},
    OpCode{name: "movel",   size: 2, opcode: one(0020000), mask: one(0170000), args: "nspd", arch: arch::MCFISA_A},
    OpCode{name: "movel",   size: 2, opcode: one(0020000), mask: one(0170000), args: "olmd", arch: arch::MCFISA_A},
    OpCode{name: "movel",   size: 2, opcode: one(0047140), mask: one(0177770), args: "AsUd", arch: arch::M68000UP | arch::MCFUSP},
    OpCode{name: "movel",   size: 2, opcode: one(0047150), mask: one(0177770), args: "UdAs", arch: arch::M68000UP | arch::MCFUSP},
    OpCode{name: "movel",   size: 2, opcode: one(0120600), mask: one(0177760), args: "EsRs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0120400), mask: one(0177760), args: "RsEs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 6, opcode: one(0120474), mask: one(0177777), args: "#lEs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0124600), mask: one(0177760), args: "GsRs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0124400), mask: one(0177760), args: "RsGs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 6, opcode: one(0124474), mask: one(0177777), args: "#lGs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0126600), mask: one(0177760), args: "HsRs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0126400), mask: one(0177760), args: "RsHs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 6, opcode: one(0126474), mask: one(0177777), args: "#lHs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0124700), mask: one(0177777), args: "GsCs", arch: arch::MCFMAC},
    OpCode{name: "movel",   size: 2, opcode: one(0xa180),  mask: one(0xf9f0),  args: "eFRs", arch: arch::MCFEMAC}, /* ACCx,Rx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xab80),  mask: one(0xfbf0),  args: "g]Rs", arch: arch::MCFEMAC}, /* ACCEXTx,Rx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xa980),  mask: one(0xfff0),  args: "G-Rs", arch: arch::MCFEMAC}, /* macsr,Rx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xad80),  mask: one(0xfff0),  args: "H-Rs", arch: arch::MCFEMAC}, /* mask,Rx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xa110),  mask: one(0xf9fc),  args: "efeF", arch: arch::MCFEMAC}, /* ACCy,ACCx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xa9c0),  mask: one(0xffff),  args: "G-C-", arch: arch::MCFEMAC}, /* macsr,ccr.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xa100),  mask: one(0xf9f0),  args: "RseF", arch: arch::MCFEMAC}, /* Rx,ACCx.  */
    OpCode{name: "movel",   size: 6, opcode: one(0xa13c),  mask: one(0xf9ff),  args: "#leF", arch: arch::MCFEMAC}, /* #,ACCx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xab00),  mask: one(0xfbc0),  args: "Rsg]", arch: arch::MCFEMAC}, /* Rx,ACCEXTx.  */
    OpCode{name: "movel",   size: 6, opcode: one(0xab3c),  mask: one(0xfbff),  args: "#lg]", arch: arch::MCFEMAC}, /* #,ACCEXTx.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xa900),  mask: one(0xffc0),  args: "RsG-", arch: arch::MCFEMAC}, /* Rx,macsr.  */
    OpCode{name: "movel",   size: 6, opcode: one(0xa93c),  mask: one(0xffff),  args: "#lG-", arch: arch::MCFEMAC}, /* #,macsr.  */
    OpCode{name: "movel",   size: 2, opcode: one(0xad00),  mask: one(0xffc0),  args: "RsH-", arch: arch::MCFEMAC}, /* Rx,mask.  */
    OpCode{name: "movel",   size: 6, opcode: one(0xad3c),  mask: one(0xffff),  args: "#lH-", arch: arch::MCFEMAC}, /* #,mask.  */
    OpCode{name: "move",   size: 2, opcode:	one(0030000),  mask: one(0170000), args: "*w%d", arch: arch::M68000UP},
    OpCode{name: "move",   size: 2, opcode:	one(0030000),  mask: one(0170000), args: "ms%d", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0030000),  mask: one(0170000), args: "nspd", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0030000),  mask: one(0170000), args: "owmd", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0030000),  mask: one(0170000), args: "ownd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "move",   size: 2, opcode:	one(0040300),  mask: one(0177700), args: "Ss$s", arch: arch::M68000UP},
    OpCode{name: "move",   size: 2, opcode:	one(0040300),  mask: one(0177770), args: "SsDs", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0041300),  mask: one(0177700), args: "Cs$s", arch: arch::M68010UP},
    OpCode{name: "move",   size: 2, opcode:	one(0041300),  mask: one(0177770), args: "CsDs", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0042300),  mask: one(0177700), args: ";wCd", arch: arch::M68000UP},
    OpCode{name: "move",   size: 2, opcode:	one(0042300),  mask: one(0177700), args: "DsCd", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 4, opcode:	one(0042374),  mask: one(0177777), args: "#wCd", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0043300),  mask: one(0177700), args: ";wSd", arch: arch::M68000UP},
    OpCode{name: "move",   size: 2, opcode:	one(0043300),  mask: one(0177700), args: "DsSd", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 4, opcode:	one(0043374),  mask: one(0177777), args: "#wSd", arch: arch::MCFISA_A},
    OpCode{name: "move",   size: 2, opcode:	one(0047140),  mask: one(0177770), args: "AsUd", arch: arch::M68000UP},
    OpCode{name: "move",   size: 2, opcode:	one(0047150),  mask: one(0177770), args: "UdAs", arch: arch::M68000UP},
    OpCode{name: "mov3ql", size: 2, opcode:	one(0120500),  mask: one(0170700), args: "xd%s", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "mvsb",   size: 2, opcode:	one(0070400),  mask: one(0170700), args: "*bDd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "mvsw",   size: 2, opcode:	one(0070500),  mask: one(0170700), args: "*wDd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "mvzb",   size: 2, opcode:	one(0070600),  mask: one(0170700), args: "*bDd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "mvzw",   size: 2, opcode:	one(0070700),  mask: one(0170700), args: "*wDd", arch: arch::MCFISA_B | arch::MCFISA_C},
    OpCode{name: "movesb", size: 4, opcode:	two(0007000, 0),     mask: two(0177700, 07777), args: "~sR1", arch: arch::M68010UP},
    OpCode{name: "movesb", size: 4, opcode:	two(0007000, 04000), mask: two(0177700, 07777), args: "R1~s", arch: arch::M68010UP},
    OpCode{name: "movesw", size: 4, opcode:	two(0007100, 0),     mask: two(0177700, 07777), args: "~sR1", arch: arch::M68010UP},
    OpCode{name: "movesw", size: 4, opcode:	two(0007100, 04000), mask: two(0177700, 07777), args: "R1~s", arch: arch::M68010UP},
    OpCode{name: "movesl", size: 4, opcode:	two(0007200, 0),     mask: two(0177700, 07777), args: "~sR1", arch: arch::M68010UP},
    OpCode{name: "movesl", size: 4, opcode:	two(0007200, 04000), mask: two(0177700, 07777), args: "R1~s", arch: arch::M68010UP},
    OpCode{name: "move16", size: 4, opcode:	two(0xf620, 0x8000), mask: two(0xfff8, 0x8fff), args: "+s+1", arch: arch::M68040UP},
    OpCode{name: "move16", size: 2, opcode:	one(0xf600), mask: one(0xfff8), args: "+s_L", arch: arch::M68040UP},
    OpCode{name: "move16", size: 2, opcode:	one(0xf608), mask: one(0xfff8), args: "_L+s", arch: arch::M68040UP},
    OpCode{name: "move16", size: 2, opcode:	one(0xf610), mask: one(0xfff8), args: "as_L", arch: arch::M68040UP},
    OpCode{name: "move16", size: 2, opcode:	one(0xf618), mask: one(0xfff8), args: "_Las", arch: arch::M68040UP},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa080, 0x0100), mask: two(0xf180, 0x0910), args: "uNuoiI4/Rn", arch: arch::MCFMAC},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa080, 0x0300), mask: two(0xf180, 0x0910), args: "uNuoMh4/Rn", arch: arch::MCFMAC},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa080, 0x0100), mask: two(0xf180, 0x0f10), args: "uNuo4/Rn", arch: arch::MCFMAC},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0100), mask: two(0xf1b0, 0x0900), args: "uMumiI", arch: arch::MCFMAC},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0300), mask: two(0xf1b0, 0x0900), args: "uMumMh", arch: arch::MCFMAC},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0100), mask: two(0xf1b0, 0x0f00), args: "uMum", arch: arch::MCFMAC},
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0100), mask: two(0xf100, 0x0900), args: "uNuoiI4/RneG", arch: arch::MCFEMAC},/* Ry,Rx,SF,<ea>,accX.  */
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0300), mask: two(0xf100, 0x0900), args: "uNuoMh4/RneG", arch: arch::MCFEMAC},/* Ry,Rx,+1/-1,<ea>,accX.  */
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0100), mask: two(0xf100, 0x0f00), args: "uNuo4/RneG", arch: arch::MCFEMAC},/* Ry,Rx,<ea>,accX.  */
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0100), mask: two(0xf130, 0x0900), args: "uMumiIeH", arch: arch::MCFEMAC},/* Ry,Rx,SF,accX.  */
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0300), mask: two(0xf130, 0x0900), args: "uMumMheH", arch: arch::MCFEMAC},/* Ry,Rx,+1/-1,accX.  */
    OpCode{name: "msacw",  size: 4, opcode: two(0xa000, 0x0100), mask: two(0xf130, 0x0f00), args: "uMumeH", arch: arch::MCFEMAC}, /* Ry,Rx,accX.  */
    OpCode{name: "msacl",  size: 4, opcode: two(0xa080, 0x0900), mask: two(0xf180, 0x0910), args: "RNRoiI4/Rn", arch: arch::MCFMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa080, 0x0b00), mask: two(0xf180, 0x0910), args: "RNRoMh4/Rn", arch: arch::MCFMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa080, 0x0900), mask: two(0xf180, 0x0f10), args: "RNRo4/Rn", arch: arch::MCFMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0900), mask: two(0xf1b0, 0x0b00), args: "RMRmiI", arch: arch::MCFMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0b00), mask: two(0xf1b0, 0x0b00), args: "RMRmMh", arch: arch::MCFMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0900), mask: two(0xf1b0, 0x0900), args: "RMRm", arch: arch::MCFMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0900), mask: two(0xf100, 0x0900), args: "R3R1iI4/RneG", arch: arch::MCFEMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0b00), mask: two(0xf100, 0x0900), args: "R3R1Mh4/RneG", arch: arch::MCFEMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0900), mask: two(0xf100, 0x0f00), args: "R3R14/RneG", arch: arch::MCFEMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0900), mask: two(0xf130, 0x0900), args: "RMRmiIeH", arch: arch::MCFEMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0b00), mask: two(0xf130, 0x0900), args: "RMRmMheH", arch: arch::MCFEMAC},
    OpCode{name: "msacl",  size: 4, opcode: two(0xa000, 0x0900), mask: two(0xf130, 0x0f00), args: "RMRmeH",   arch: arch::MCFEMAC},
    OpCode{name: "mulsw",  size: 2, opcode:	one(0140700),		      mask: one(0170700),             args: ";wDd",     arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "mulsl",  size: 4, opcode:	two(0046000,004000), mask: two(0177700,0107770), args: ";lD1",    arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "mulsl",  size: 4, opcode:	two(0046000,004000), mask: two(0177700,0107770), args: "qsD1",    arch: arch::MCFISA_A},
    OpCode{name: "mulsl",  size: 4, opcode:	two(0046000,006000), mask: two(0177700,0107770), args: ";lD3D1",  arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "muluw",  size: 2, opcode:	one(0140300),		      mask: one(0170700),              args: ";wDd",    arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "mulul",  size: 4, opcode:	two(0046000,000000), mask: two(0177700,0107770), args: ";lD1",    arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "mulul",  size: 4, opcode:	two(0046000,000000), mask: two(0177700,0107770), args: "qsD1",    arch: arch::MCFISA_A},
    OpCode{name: "mulul",  size: 4, opcode:	two(0046000,002000), mask: two(0177700,0107770), args: ";lD3D1",  arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "nbcd",   size: 2, opcode:	one(0044000),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negb",   size: 2, opcode:	one(0042000),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negw",   size: 2, opcode:	one(0042100),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negl",   size: 2, opcode:	one(0042200),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negl",   size: 2, opcode:	one(0042200),	mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "negxb",  size: 2, opcode:	one(0040000),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negxw",  size: 2, opcode:	one(0040100),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negxl",  size: 2, opcode:	one(0040200),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "negxl",  size: 2, opcode:	one(0040200),	mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "nop",    size: 2, opcode:	one(0047161),	mask: one(0177777), args: "",   arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "notb",   size: 2, opcode:	one(0043000),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "notw",   size: 2, opcode:	one(0043100),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "notl",   size: 2, opcode:	one(0043200),	mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "notl",   size: 2, opcode:	one(0043200),	mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "orib",   size: 4, opcode:	one(0000000),	mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "orib",   size: 4, opcode:	one(0000074),	mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "oriw",   size: 4, opcode:	one(0000100),	mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "oriw",   size: 4, opcode:	one(0000174),	mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "oril",   size: 6, opcode:	one(0000200),	mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "oril",   size: 6, opcode:	one(0000200),	mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "ori",    size: 4, opcode:	one(0000074),	mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "ori",    size: 4, opcode:	one(0000100),	mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "ori",    size: 4, opcode:	one(0000174),	mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    /* The or opcode can generate the ori instruction.  */
    OpCode{name: "orb", size: 4, opcode:	one(0000000),	mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "orb", size: 4, opcode:	one(0000074),	mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "orb", size: 2, opcode:	one(0100000),	mask: one(0170700), args: ";bDd", arch: arch::M68000UP},
    OpCode{name: "orb", size: 2, opcode:	one(0100400),	mask: one(0170700), args: "Dd~s", arch: arch::M68000UP},
    OpCode{name: "orw", size: 4, opcode:	one(0000100),	mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "orw", size: 4, opcode:	one(0000174),	mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "orw", size: 2, opcode:	one(0100100),	mask: one(0170700), args: ";wDd", arch: arch::M68000UP},
    OpCode{name: "orw", size: 2, opcode:	one(0100500),	mask: one(0170700), args: "Dd~s", arch: arch::M68000UP},
    OpCode{name: "orl", size: 6, opcode:	one(0000200),	mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "orl", size: 6, opcode:	one(0000200),	mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "orl", size: 2, opcode:	one(0100200),	mask: one(0170700), args: ";lDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "orl", size: 2, opcode:	one(0100600),	mask: one(0170700), args: "Dd~s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "or",  size: 4, opcode:	one(0000074),	mask: one(0177777), args: "#bCs", arch: arch::M68000UP},
    OpCode{name: "or",  size: 4, opcode:	one(0000100),	mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "or",  size: 4, opcode:	one(0000174),	mask: one(0177777), args: "#wSs", arch: arch::M68000UP},
    OpCode{name: "or",  size: 2, opcode:	one(0100100),	mask: one(0170700), args: ";wDd", arch: arch::M68000UP},
    OpCode{name: "or",  size: 2, opcode:	one(0100500),	mask: one(0170700), args: "Dd~s", arch: arch::M68000UP},
    OpCode{name: "pack", size: 4, opcode:	one(0100500),	mask: one(0170770), args: "DsDd#w", arch: arch::M68020UP },
    OpCode{name: "pack", size: 4, opcode:	one(0100510),	mask: one(0170770), args: "-s-d#w", arch: arch::M68020UP },
    OpCode{name: "pbac", size: 2, opcode:	one(0xf087),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbacw", size: 2, opcode:	one(0xf087),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbas", size: 2, opcode:	one(0xf086),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbasw", size: 2, opcode:	one(0xf086),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbbc", size: 2, opcode:	one(0xf081),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbbcw", size: 2, opcode:	one(0xf081),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbbs", size: 2, opcode:	one(0xf080),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbbsw", size: 2, opcode:	one(0xf080),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbcc", size: 2, opcode:	one(0xf08f),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbccw", size: 2, opcode:	one(0xf08f),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbcs", size: 2, opcode:	one(0xf08e),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbcsw", size: 2, opcode:	one(0xf08e),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbgc", size: 2, opcode:	one(0xf08d),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbgcw", size: 2, opcode:	one(0xf08d),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbgs", size: 2, opcode:	one(0xf08c),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbgsw", size: 2, opcode:	one(0xf08c),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbic", size: 2, opcode:	one(0xf08b),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbicw", size: 2, opcode:	one(0xf08b),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbis", size: 2, opcode:	one(0xf08a),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbisw", size: 2, opcode:	one(0xf08a),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pblc", size: 2, opcode:	one(0xf083),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pblcw", size: 2, opcode:	one(0xf083),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbls", size: 2, opcode:	one(0xf082),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pblsw", size: 2, opcode:	one(0xf082),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbsc", size: 2, opcode:	one(0xf085),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbscw", size: 2, opcode:	one(0xf085),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbss", size: 2, opcode:	one(0xf084),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbssw", size: 2, opcode:	one(0xf084),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbwc", size: 2, opcode:	one(0xf089),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbwcw", size: 2, opcode:	one(0xf089),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pbws", size: 2, opcode:	one(0xf088),	mask: one(0xffbf), args: "Bc", arch: arch::M68851},
    OpCode{name: "pbwsw", size: 2, opcode:	one(0xf088),	mask: one(0xffff), args: "BW", arch: arch::M68851},
    OpCode{name: "pdbac", size: 4, opcode:	two(0xf048, 0x0007), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbas", size: 4, opcode:	two(0xf048, 0x0006), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbbc", size: 4, opcode:	two(0xf048, 0x0001), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbbs", size: 4, opcode:	two(0xf048, 0x0000), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbcc", size: 4, opcode:	two(0xf048, 0x000f), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbcs", size: 4, opcode:	two(0xf048, 0x000e), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbgc", size: 4, opcode:	two(0xf048, 0x000d), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbgs", size: 4, opcode:	two(0xf048, 0x000c), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbic", size: 4, opcode:	two(0xf048, 0x000b), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbis", size: 4, opcode:	two(0xf048, 0x000a), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdblc", size: 4, opcode:	two(0xf048, 0x0003), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbls", size: 4, opcode:	two(0xf048, 0x0002), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbsc", size: 4, opcode:	two(0xf048, 0x0005), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbss", size: 4, opcode:	two(0xf048, 0x0004), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbwc", size: 4, opcode:	two(0xf048, 0x0009), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pdbws", size: 4, opcode:	two(0xf048, 0x0008), mask: two(0xfff8, 0xffff), args: "DsBw", arch: arch::M68851},
    OpCode{name: "pea",   size: 2, opcode:	one(0044100),  mask: one(0177700), args: "!s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "pflusha",  size: 2, opcode: one(0xf518), mask: one(0xfff8),  args: "",   arch: arch::M68040UP},
    OpCode{name: "pflusha",  size: 4, opcode: two(0xf000,0x2400),  mask: two(0xffff,0xffff), args: "",       arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 4, opcode: two(0xf000,0x3010),  mask: two(0xffc0,0xfe10), args: "T3T9",   arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 4, opcode: two(0xf000,0x3810),  mask: two(0xffc0,0xfe10), args: "T3T9&s", arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 4, opcode: two(0xf000,0x3008),  mask: two(0xffc0,0xfe18), args: "D3T9",   arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 4, opcode: two(0xf000,0x3808),  mask: two(0xffc0,0xfe18), args: "D3T9&s", arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 4, opcode: two(0xf000,0x3000),  mask: two(0xffc0,0xfe1e), args: "f3T9",   arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 4, opcode: two(0xf000,0x3800),  mask: two(0xffc0,0xfe1e), args: "f3T9&s", arch: arch::M68030 | arch::M68851 },
    OpCode{name: "pflush",   size: 2, opcode: one(0xf508),              mask: one(0xfff8),             args: "as",     arch: arch::M68040UP},
    OpCode{name: "pflush",   size: 2, opcode: one(0xf508),              mask: one(0xfff8),             args: "As",     arch: arch::M68040UP},
    OpCode{name: "pflushan", size: 2, opcode: one(0xf510),              mask: one(0xfff8),             args: "",       arch: arch::M68040UP},
    OpCode{name: "pflushn",  size: 2, opcode: one(0xf500),              mask: one(0xfff8),             args: "as",     arch: arch::M68040UP},
    OpCode{name: "pflushn",  size: 2, opcode: one(0xf500),              mask: one(0xfff8),             args: "As",     arch: arch::M68040UP},
    OpCode{name: "pflushr",  size: 4, opcode: two(0xf000, 0xa000), mask: two(0xffc0, 0xffff),args: "|s",     arch: arch::M68851},
    OpCode{name: "pflushs",  size: 4, opcode: two(0xf000, 0x3410), mask: two(0xfff8, 0xfe10),args: "T3T9",   arch: arch::M68851},
    OpCode{name: "pflushs",  size: 4, opcode: two(0xf000, 0x3c10), mask: two(0xfff8, 0xfe10),args: "T3T9&s", arch: arch::M68851},
    OpCode{name: "pflushs",  size: 4, opcode: two(0xf000, 0x3408), mask: two(0xfff8, 0xfe18),args: "D3T9",   arch: arch::M68851},
    OpCode{name: "pflushs",  size: 4, opcode: two(0xf000, 0x3c08), mask: two(0xfff8, 0xfe18),args: "D3T9&s", arch: arch::M68851},
    OpCode{name: "pflushs",  size: 4, opcode: two(0xf000, 0x3400), mask: two(0xfff8, 0xfe1e),args: "f3T9",   arch: arch::M68851},
    OpCode{name: "pflushs",  size: 4, opcode: two(0xf000, 0x3c00), mask: two(0xfff8, 0xfe1e),args: "f3T9&s", arch: arch::M68851},
    OpCode{name: "ploadr",   size: 4, opcode: two(0xf000,0x2210),  mask: two(0xffc0,0xfff0), args: "T3&s",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ploadr",   size: 4, opcode: two(0xf000,0x2208),  mask: two(0xffc0,0xfff8), args: "D3&s",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ploadr",   size: 4, opcode: two(0xf000,0x2200),  mask: two(0xffc0,0xfffe), args: "f3&s",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ploadw",   size: 4, opcode: two(0xf000,0x2010),  mask: two(0xffc0,0xfff0), args: "T3&s",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ploadw",   size: 4, opcode: two(0xf000,0x2008),  mask: two(0xffc0,0xfff8), args: "D3&s",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ploadw",   size: 4, opcode: two(0xf000,0x2000),  mask: two(0xffc0,0xfffe), args: "f3&s",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "plpar",    size: 2, opcode: one(0xf5c8),		mask: one(0xfff8), args: "as", arch: arch::M68060},
    OpCode{name: "plpaw",    size: 2, opcode: one(0xf588),		mask: one(0xfff8), args: "as", arch: arch::M68060},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x4000), mask: two(0xffc0,0xffff), args: "*l08", arch: arch::M68030 | arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x5c00), mask: two(0xffc0,0xffff), args: "*w18", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x4000), mask: two(0xffc0,0xe3ff), args: "*b28", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x4200), mask: two(0xffc0,0xffff), args: "08%s", arch: arch::M68030 | arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x5e00), mask: two(0xffc0,0xffff), args: "18%s", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x4200), mask: two(0xffc0,0xe3ff), args: "28%s", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x4000), mask: two(0xffc0,0xe3ff), args: "|sW8", arch: arch::M68030 | arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x4200), mask: two(0xffc0,0xe3ff), args: "W8~s", arch: arch::M68030 | arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x6000), mask: two(0xffc0,0xffff), args: "*wY8", arch: arch::M68030 | arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x6200), mask: two(0xffc0,0xffff), args: "Y8%s", arch: arch::M68030 | arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x6600), mask: two(0xffc0,0xffff), args: "Z8%s", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x6000), mask: two(0xffc0,0xe3e3), args: "*wX3", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x6200), mask: two(0xffc0,0xe3e3), args: "X3%s", arch: arch::M68851},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x0800), mask: two(0xffc0,0xfbff), args: "*l38", arch: arch::M68030},
    OpCode{name: "pmove",    size: 4, opcode: two(0xf000,0x0a00), mask: two(0xffc0,0xfbff), args: "38%s", arch: arch::M68030},
    OpCode{name: "pmovefd",  size: 4, opcode: two(0xf000, 0x4100), mask: two(0xffc0, 0xe3ff), args: "*l08", arch: arch::M68030},
    OpCode{name: "pmovefd",  size: 4, opcode: two(0xf000, 0x4100), mask: two(0xffc0, 0xe3ff), args: "|sW8", arch: arch::M68030},
    OpCode{name: "pmovefd",  size: 4, opcode: two(0xf000, 0x0900), mask: two(0xffc0, 0xfbff), args: "*l38", arch: arch::M68030},
    OpCode{name: "prestore", size: 2, opcode: one(0xf140),	mask: one(0xffc0), args: "<s", arch: arch::M68851},
    OpCode{name: "psave", size: 2,  opcode: one(0xf100),	mask: one(0xffc0), args: ">s", arch: arch::M68851},
    OpCode{name: "psac", size: 4,   opcode: two(0xf040, 0x0007), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psas", size: 4,   opcode: two(0xf040, 0x0006), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psbc", size: 4,   opcode: two(0xf040, 0x0001), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psbs", size: 4,   opcode: two(0xf040, 0x0000), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "pscc", size: 4,   opcode: two(0xf040, 0x000f), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "pscs", size: 4,   opcode: two(0xf040, 0x000e), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psgc", size: 4,   opcode: two(0xf040, 0x000d), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psgs", size: 4,   opcode: two(0xf040, 0x000c), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psic", size: 4,   opcode: two(0xf040, 0x000b), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psis", size: 4,   opcode: two(0xf040, 0x000a), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "pslc", size: 4,   opcode: two(0xf040, 0x0003), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psls", size: 4,   opcode: two(0xf040, 0x0002), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "pssc", size: 4,   opcode: two(0xf040, 0x0005), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psss", size: 4,   opcode: two(0xf040, 0x0004), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "pswc", size: 4,   opcode: two(0xf040, 0x0009), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "psws", size: 4,   opcode: two(0xf040, 0x0008), mask: two(0xffc0, 0xffff), args: "$s", arch: arch::M68851},
    OpCode{name: "ptestr", size: 4, opcode: two(0xf000,0x8210),  mask: two(0xffc0, 0xe3f0), args: "T3&st8",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestr", size: 4, opcode: two(0xf000,0x8310),  mask: two(0xffc0,0xe310),  args: "T3&st8A9", arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestr", size: 4, opcode: two(0xf000,0x8208),  mask: two(0xffc0,0xe3f8),  args: "D3&st8",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestr", size: 4, opcode: two(0xf000,0x8308),  mask: two(0xffc0,0xe318),  args: "D3&st8A9", arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestr", size: 4, opcode: two(0xf000,0x8200),  mask: two(0xffc0,0xe3fe),  args: "f3&st8",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestr", size: 4, opcode: two(0xf000,0x8300),  mask: two(0xffc0,0xe31e),  args: "f3&st8A9", arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestr", size: 2, opcode:	one(0xf568), mask: one(0xfff8), args: "as", arch: arch::M68040},
    OpCode{name: "ptestw", size: 4, opcode: two(0xf000,0x8010), mask: two(0xffc0,0xe3f0), args: "T3&st8",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestw", size: 4, opcode: two(0xf000,0x8110), mask: two(0xffc0,0xe310), args: "T3&st8A9", arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestw", size: 4, opcode: two(0xf000,0x8008), mask: two(0xffc0,0xe3f8), args: "D3&st8",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestw", size: 4, opcode: two(0xf000,0x8108), mask: two(0xffc0,0xe318), args: "D3&st8A9", arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestw", size: 4, opcode: two(0xf000,0x8000), mask: two(0xffc0,0xe3fe), args: "f3&st8",   arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestw", size: 4, opcode: two(0xf000,0x8100), mask: two(0xffc0,0xe31e), args: "f3&st8A9", arch: arch::M68030 | arch::M68851},
    OpCode{name: "ptestw",   size: 2, opcode: one(0xf548), mask: one(0xfff8), args: "as", arch: arch::M68040},
    OpCode{name: "ptrapacw", size: 6, opcode: two(0xf07a, 0x0007), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapacl", size: 6, opcode: two(0xf07b, 0x0007), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapac",  size: 4, opcode: two(0xf07c, 0x0007), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapasw", size: 6, opcode: two(0xf07a, 0x0006), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapasl", size: 6, opcode: two(0xf07b, 0x0006), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapas",  size: 4, opcode: two(0xf07c, 0x0006), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapbcw", size: 6, opcode: two(0xf07a, 0x0001), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapbcl", size: 6, opcode: two(0xf07b, 0x0001), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapbc",  size: 4, opcode: two(0xf07c, 0x0001), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapbsw", size: 6, opcode: two(0xf07a, 0x0000), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapbsl", size: 6, opcode: two(0xf07b, 0x0000), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapbs",  size: 4, opcode: two(0xf07c, 0x0000), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapccw", size: 6, opcode: two(0xf07a, 0x000f), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapccl", size: 6, opcode: two(0xf07b, 0x000f), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapcc",  size: 4, opcode: two(0xf07c, 0x000f), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapcsw", size: 6, opcode: two(0xf07a, 0x000e), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapcsl", size: 6, opcode: two(0xf07b, 0x000e), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapcs",  size: 4, opcode: two(0xf07c, 0x000e), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapgcw", size: 6, opcode: two(0xf07a, 0x000d), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapgcl", size: 6, opcode: two(0xf07b, 0x000d), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapgc",  size: 4, opcode: two(0xf07c, 0x000d), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapgsw", size: 6, opcode: two(0xf07a, 0x000c), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapgsl", size: 6, opcode: two(0xf07b, 0x000c), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapgs",  size: 4, opcode: two(0xf07c, 0x000c), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapicw", size: 6, opcode: two(0xf07a, 0x000b), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapicl", size: 6, opcode: two(0xf07b, 0x000b), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapic",  size: 4, opcode: two(0xf07c, 0x000b), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapisw", size: 6, opcode: two(0xf07a, 0x000a), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapisl", size: 6, opcode: two(0xf07b, 0x000a), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapis",  size: 4, opcode: two(0xf07c, 0x000a), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptraplcw", size: 6, opcode: two(0xf07a, 0x0003), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptraplcl", size: 6, opcode: two(0xf07b, 0x0003), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptraplc",  size: 4, opcode: two(0xf07c, 0x0003), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptraplsw", size: 6, opcode: two(0xf07a, 0x0002), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptraplsl", size: 6, opcode: two(0xf07b, 0x0002), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapls",  size: 4, opcode: two(0xf07c, 0x0002), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapscw", size: 6, opcode: two(0xf07a, 0x0005), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapscl", size: 6, opcode: two(0xf07b, 0x0005), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapsc",  size: 4, opcode: two(0xf07c, 0x0005), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapssw", size: 6, opcode: two(0xf07a, 0x0004), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapssl", size: 6, opcode: two(0xf07b, 0x0004), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapss",  size: 4, opcode: two(0xf07c, 0x0004), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapwcw", size: 6, opcode: two(0xf07a, 0x0009), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapwcl", size: 6, opcode: two(0xf07b, 0x0009), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapwc",  size: 4, opcode: two(0xf07c, 0x0009), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "ptrapwsw", size: 6, opcode: two(0xf07a, 0x0008), mask: two(0xffff, 0xffff), args: "#w", arch: arch::M68851},
    OpCode{name: "ptrapwsl", size: 6, opcode: two(0xf07b, 0x0008), mask: two(0xffff, 0xffff), args: "#l", arch: arch::M68851},
    OpCode{name: "ptrapws",  size: 4, opcode: two(0xf07c, 0x0008), mask: two(0xffff, 0xffff), args: "",   arch: arch::M68851},
    OpCode{name: "pulse",    size: 2, opcode: one(0045314), mask: one(0177777), args: "", arch: arch::M68060 | arch::MCFISA_A},
    OpCode{name: "pvalid",   size: 4, opcode: two(0xf000, 0x2800), mask: two(0xffc0, 0xffff), args: "Vs&s", arch: arch::M68851},
    OpCode{name: "pvalid",   size: 4, opcode: two(0xf000, 0x2c00), mask: two(0xffc0, 0xfff8), args: "A3&s", arch: arch::M68851},
    /* FIXME: don't allow Dw==Dx. */
    OpCode{name: "remsl", size: 4, opcode: two(0x4c40, 0x0800), mask: two(0xffc0, 0x8ff8), args: "qsD3D1", arch: arch::MCFHWDIV},
    OpCode{name: "remul", size: 4, opcode: two(0x4c40, 0x0000), mask: two(0xffc0, 0x8ff8), args: "qsD3D1", arch: arch::MCFHWDIV},
    OpCode{name: "reset", size: 2, opcode: one(0047160), mask: one(0177777), args: "",     arch: arch::M68000UP},
    OpCode{name: "rolb",  size: 2, opcode: one(0160430), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "rolb",  size: 2, opcode: one(0160470), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "rolw",  size: 2, opcode: one(0160530), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "rolw",  size: 2, opcode: one(0160570), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "rolw",  size: 2, opcode: one(0163700), mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "roll",  size: 2, opcode: one(0160630), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roll",  size: 2, opcode: one(0160670), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "rorb",  size: 2, opcode: one(0160030), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "rorb",  size: 2, opcode: one(0160070), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "rorw",  size: 2, opcode: one(0160130), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "rorw",  size: 2, opcode: one(0160170), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "rorw",  size: 2, opcode: one(0163300), mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "rorl",  size: 2, opcode: one(0160230), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "rorl",  size: 2, opcode: one(0160270), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "roxlb", size: 2, opcode: one(0160420), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roxlb", size: 2, opcode: one(0160460), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "roxlw", size: 2, opcode: one(0160520), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roxlw", size: 2, opcode: one(0160560), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "roxlw", size: 2, opcode: one(0162700), mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "roxll", size: 2, opcode: one(0160620), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roxll", size: 2, opcode: one(0160660), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "roxrb", size: 2, opcode: one(0160020), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roxrb", size: 2, opcode: one(0160060), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "roxrw", size: 2, opcode: one(0160120), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roxrw", size: 2, opcode: one(0160160), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "roxrw", size: 2, opcode: one(0162300), mask: one(0177700), args: "~s",   arch: arch::M68000UP},
    OpCode{name: "roxrl", size: 2, opcode: one(0160220), mask: one(0170770), args: "QdDs", arch: arch::M68000UP},
    OpCode{name: "roxrl", size: 2, opcode: one(0160260), mask: one(0170770), args: "DdDs", arch: arch::M68000UP},
    OpCode{name: "rtd",   size: 4, opcode: one(0047164), mask: one(0177777), args: "#w",   arch: arch::M68010UP},
            
    OpCode{name: "rte", size: 2, opcode: one(0047163),		mask: one(0177777), args: "",   arch: arch::M68000UP | arch::MCFISA_A},
            
    OpCode{name: "rtm", size: 2, opcode: one(0003300),		mask: one(0177760), args: "Rs", arch: arch::M68020},
            
    OpCode{name: "rtr", size: 2, opcode: one(0047167),		mask: one(0177777), args: "",   arch: arch::M68000UP},
            
    OpCode{name: "rts",   size: 2, opcode: one(0047165), mask: one(0177777), args: "",     arch: arch::M68000UP | arch::MCFISA_A },
    OpCode{name: "satsl", size: 2, opcode: one(0046200), mask: one(0177770), args: "Ds",   arch: arch::MCFISA_B | arch::MCFISA_C },
    OpCode{name: "sbcd",  size: 2, opcode: one(0100400), mask: one(0170770), args: "DsDd", arch: arch::M68000UP },
    OpCode{name: "sbcd",  size: 2, opcode: one(0100410), mask: one(0170770), args: "-s-d", arch: arch::M68000UP },
    
    OpCode{name: "stldsr", size: 6, opcode: two(0x40e7, 0x46fc), mask: two(0xffff, 0xffff), args: "#w", arch: arch::MCFISA_AA | arch::MCFISA_C },
    
    /* Traps have to come before conditional sets, as they have a more
        specific opcode.  */
    OpCode{name: "trapcc", size: 2, opcode:	one(0052374), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapcs", size: 2, opcode:	one(0052774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapeq", size: 2, opcode:	one(0053774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "tpf", size: 2, opcode:	one(0050774), mask: one(0177777), args: "", arch: arch::MCFISA_A},
    OpCode{name: "trapf", size: 2, opcode:	one(0050774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "trapge", size: 2, opcode:	one(0056374), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapgt", size: 2, opcode:	one(0057374), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traphi", size: 2, opcode:	one(0051374), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traple", size: 2, opcode:	one(0057774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapls", size: 2, opcode:	one(0051774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traplt", size: 2, opcode:	one(0056774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapmi", size: 2, opcode:	one(0055774), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapne", size: 2, opcode:	one(0053374), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trappl", size: 2, opcode:	one(0055374), mask: one(0177777), args: "", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapt",   size: 2, opcode: one(0050374), mask: one(0177777), args: "",   arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapvc",  size: 2, opcode: one(0054374), mask: one(0177777), args: "",   arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapvs",  size: 2, opcode: one(0054774), mask: one(0177777), args: "",   arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapccw", size: 4, opcode: one(0052372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A },
    OpCode{name: "trapcsw", size: 4, opcode: one(0052772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A },
    OpCode{name: "trapeqw", size: 4, opcode: one(0053772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A },
    OpCode{name: "tpfw",    size: 4, opcode: one(0050772), mask: one(0177777), args: "#w", arch: arch::MCFISA_A},
    OpCode{name: "trapfw",  size: 4, opcode: one(0050772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "trapgew", size: 4, opcode: one(0056372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapgtw", size: 4, opcode: one(0057372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traphiw", size: 4, opcode: one(0051372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traplew", size: 4, opcode: one(0057772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traplsw", size: 4, opcode: one(0051772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapltw", size: 4, opcode: one(0056772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapmiw", size: 4, opcode: one(0055772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapnew", size: 4, opcode: one(0053372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapplw", size: 4, opcode: one(0055372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traptw",  size: 4, opcode: one(0050372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapvcw", size: 4, opcode: one(0054372), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapvsw", size: 4, opcode: one(0054772), mask: one(0177777), args: "#w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapccl", size: 6, opcode: one(0052373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapcsl", size: 6, opcode: one(0052773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapeql", size: 6, opcode: one(0053773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "tpfl",    size: 6, opcode: one(0050773), mask: one(0177777), args: "#l", arch: arch::MCFISA_A},
    OpCode{name: "trapfl",  size: 6, opcode: one(0050773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "trapgel", size: 6, opcode: one(0056373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapgtl", size: 6, opcode: one(0057373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traphil", size: 6, opcode: one(0051373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traplel", size: 6, opcode: one(0057773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traplsl", size: 6, opcode: one(0051773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapltl", size: 6, opcode: one(0056773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapmil", size: 6, opcode: one(0055773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapnel", size: 6, opcode: one(0053373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trappll", size: 6, opcode: one(0055373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "traptl",  size: 6, opcode: one(0050373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapvcl", size: 6, opcode: one(0054373), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapvsl", size: 6, opcode: one(0054773), mask: one(0177777), args: "#l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A},
    OpCode{name: "trapv",   size: 2, opcode: one(0047166), mask: one(0177777), args: "", arch: arch::M68000UP},
    OpCode{name: "scc", size: 2, opcode: one(0052300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "scc", size: 2, opcode: one(0052300), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "scs", size: 2, opcode: one(0052700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "scs", size: 2, opcode: one(0052700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "seq", size: 2, opcode: one(0053700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "seq", size: 2, opcode: one(0053700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sf",  size: 2, opcode: one(0050700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "sf",  size: 2, opcode: one(0050700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sge", size: 2, opcode: one(0056300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "sge", size: 2, opcode: one(0056300), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sgt", size: 2, opcode: one(0057300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "sgt", size: 2, opcode: one(0057300), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "shi", size: 2, opcode: one(0051300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "shi", size: 2, opcode: one(0051300), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sle", size: 2, opcode: one(0057700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "sle", size: 2, opcode: one(0057700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sls", size: 2, opcode: one(0051700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "sls", size: 2, opcode: one(0051700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "slt", size: 2, opcode: one(0056700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "slt", size: 2, opcode: one(0056700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "smi", size: 2, opcode: one(0055700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "smi", size: 2, opcode: one(0055700), mask: one(0177700), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sne", size: 2, opcode: one(0053300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "sne", size: 2, opcode: one(0053300), mask: one(0177770), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "spl", size: 2, opcode: one(0055300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "spl", size: 2, opcode: one(0055300), mask: one(0177770), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "st",  size: 2, opcode: one(0050300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "st",  size: 2, opcode: one(0050300), mask: one(0177770), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "svc", size: 2, opcode: one(0054300), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "svc", size: 2, opcode: one(0054300), mask: one(0177770), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "svs", size: 2, opcode: one(0054700), mask: one(0177700), args: "$s", arch: arch::M68000UP},
    OpCode{name: "svs", size: 2, opcode: one(0054700), mask: one(0177770), args: "Ds", arch: arch::MCFISA_A},
    OpCode{name: "sleep",   size: 2, opcode: one(0047170),	mask: one(0177777), args: "", arch: arch::FIDO_A},
    OpCode{name: "stop",    size: 4, opcode: one(0047162),	mask: one(0177777), args: "#w", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "strldsr", size: 4, opcode: two(0040347,0043374), mask: two(0177777,0177777), args: "#w", arch: arch::MCFISA_AA},
    OpCode{name: "subal",   size: 2, opcode: one(0110700), mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "subaw",   size: 2, opcode: one(0110300), mask: one(0170700), args: "*wAd", arch: arch::M68000UP},
    OpCode{name: "subib",   size: 4, opcode: one(0002000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "subiw",   size: 4, opcode: one(0002100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "subil",   size: 6, opcode: one(0002200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "subil",   size: 6, opcode: one(0002200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "subqb",   size: 2, opcode: one(0050400), mask: one(0170700), args: "Qd%s", arch: arch::M68000UP},
    OpCode{name: "subqw",   size: 2, opcode: one(0050500), mask: one(0170700), args: "Qd%s", arch: arch::M68000UP},
    OpCode{name: "subql",   size: 2, opcode: one(0050600), mask: one(0170700), args: "Qd%s", arch: arch::M68000UP | arch::MCFISA_A},
    /* The sub opcode can generate the suba, subi, and subq instructions.  */
    OpCode{name: "subb",  size: 2, opcode: one(0050400), mask: one(0170700), args: "Qd%s", arch: arch::M68000UP},
    OpCode{name: "subb",  size: 4, opcode: one(0002000), mask: one(0177700), args: "#b$s", arch: arch::M68000UP},
    OpCode{name: "subb",  size: 2, opcode: one(0110000), mask: one(0170700), args: ";bDd", arch: arch::M68000UP},
    OpCode{name: "subb",  size: 2, opcode: one(0110400), mask: one(0170700), args: "Dd~s", arch: arch::M68000UP},
    OpCode{name: "subw",  size: 2, opcode: one(0050500), mask: one(0170700), args: "Qd%s", arch: arch::M68000UP},
    OpCode{name: "subw",  size: 4, opcode: one(0002100), mask: one(0177700), args: "#w$s", arch: arch::M68000UP},
    OpCode{name: "subw",  size: 2, opcode: one(0110300), mask: one(0170700), args: "*wAd", arch: arch::M68000UP},
    OpCode{name: "subw",  size: 2, opcode: one(0110100), mask: one(0170700), args: "*wDd", arch: arch::M68000UP},
    OpCode{name: "subw",  size: 2, opcode: one(0110500), mask: one(0170700), args: "Dd~s", arch: arch::M68000UP},
    OpCode{name: "subl",  size: 2, opcode: one(0050600), mask: one(0170700), args: "Qd%s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "subl",  size: 6, opcode: one(0002200), mask: one(0177700), args: "#l$s", arch: arch::M68000UP},
    OpCode{name: "subl",  size: 6, opcode: one(0002200), mask: one(0177700), args: "#lDs", arch: arch::MCFISA_A},
    OpCode{name: "subl",  size: 2, opcode: one(0110700), mask: one(0170700), args: "*lAd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "subl",  size: 2, opcode: one(0110200), mask: one(0170700), args: "*lDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "subl",  size: 2, opcode: one(0110600), mask: one(0170700), args: "Dd~s", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "subxb", size: 2, opcode: one(0110400), mask: one(0170770), args: "DsDd", arch: arch::M68000UP},
    OpCode{name: "subxb", size: 2, opcode: one(0110410), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},
    OpCode{name: "subxw", size: 2, opcode: one(0110500), mask: one(0170770), args: "DsDd", arch: arch::M68000UP},
    OpCode{name: "subxw", size: 2, opcode: one(0110510), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},
    OpCode{name: "subxl", size: 2, opcode: one(0110600), mask: one(0170770), args: "DsDd", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "subxl", size: 2, opcode: one(0110610), mask: one(0170770), args: "-s-d", arch: arch::M68000UP},
    OpCode{name: "swap",  size: 2, opcode: one(0044100), mask: one(0177770), args: "Ds", arch: arch::M68000UP | arch::MCFISA_A},
    /* swbeg and swbegl are magic constants used on sysV68.  The compiler
    generates them before a switch table.  They tell the debugger and
    disassembler that a switch table follows.  The parameter is the
    number of elements in the table.  swbeg means that the entries in
    the table are word (2 byte) sized, and swbegl means that the
    entries in the table are longword (4 byte) sized.  */
    OpCode{name: "swbeg",  size: 4, opcode:	one(0045374), mask: one(0177777), args: "#w", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "swbegl", size: 6, opcode:	one(0045375), mask: one(0177777), args: "#l", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "tas",    size: 2, opcode:	one(0045300), mask: one(0177700), args: "$s", arch: arch::M68000UP | arch::MCFISA_B | arch::MCFISA_C},
    //#define TBL1(name,insn_size,signed,round,size)					\
    //{name, insn_size, two(0174000, (signed<<11)|(!round<<10)|(size<<6)|0000400),	\
    //    two(0177700,0107777), "!sD1", cpu32 },				\
    //{name, insn_size, two(0174000, (signed<<11)|(!round<<10)|(size<<6)),		\
    //    two(0177770,0107770), "DsD3D1", cpu32 }
    //#define TBL(name1, name2, name3, s, r) \
    //TBL1(name1, 4, s, r, 0), TBL1(name2, 4, s, r, 1), TBL1(name3, 4, s, r, 2)
    //TBL("tblsb", "tblsw", "tblsl", 1, 1),
    //TBL("tblsnb", "tblsnw", "tblsnl", 1, 0),
    //TBL("tblub", "tbluw", "tblul", 0, 1),
    //TBL("tblunb", "tblunw", "tblunl", 0, 0),
    OpCode{name: "trap",    size: 2, opcode: one(0047100), mask: one(0177760), args: "Ts", arch: arch::M68000UP | arch::MCFISA_A},
    OpCode{name: "trapx",   size: 2, opcode: one(0047060), mask: one(0177760), args: "Ts", arch: arch::FIDO_A },
    OpCode{name: "tstb",    size: 2, opcode: one(0045000), mask: one(0177700), args: ";b", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "tstb",    size: 2, opcode: one(0045000), mask: one(0177700), args: "$b", arch: arch::M68000UP },
    OpCode{name: "tstw",    size: 2, opcode: one(0045100), mask: one(0177700), args: "*w", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "tstw",    size: 2, opcode: one(0045100), mask: one(0177700), args: "$w", arch: arch::M68000UP },
    OpCode{name: "tstl",    size: 2, opcode: one(0045200), mask: one(0177700), args: "*l", arch: arch::M68020UP | arch::CPU32 | arch::FIDO_A | arch::MCFISA_A},
    OpCode{name: "tstl",    size: 2, opcode: one(0045200), mask: one(0177700), args: "$l", arch: arch::M68000UP },
    OpCode{name: "unlk",    size: 2, opcode: one(0047130), mask: one(0177770), args: "As", arch: arch::M68000UP | arch::MCFISA_A },
    OpCode{name: "unpk",    size: 4, opcode: one(0100600), mask: one(0170770), args: "DsDd#w", arch: arch::M68020UP},
    OpCode{name: "unpk",    size: 4, opcode: one(0100610), mask: one(0170770), args: "-s-d#w", arch: arch::M68020UP},
    OpCode{name: "wddatab", size: 2, opcode: one(0175400), mask: one(0177700), args: "~s",     arch: arch::MCFISA_A},
    OpCode{name: "wddataw", size: 2, opcode: one(0175500), mask: one(0177700), args: "~s",     arch: arch::MCFISA_A},
    OpCode{name: "wddatal", size: 2, opcode: one(0175600), mask: one(0177700), args: "~s",     arch: arch::MCFISA_A},
    OpCode{name: "wdebugl", size: 4, opcode: two(0175720, 03), mask: two(0177770, 0xffff), args: "as", arch: arch::MCFISA_A},
    OpCode{name: "wdebugl", size: 4, opcode: two(0175750, 03), mask: two(0177770, 0xffff), args: "ds", arch: arch::MCFISA_A},
    OpCode{name: "wdebug",  size: 4, opcode: two(0175720, 03), mask: two(0177770, 0xffff), args: "as", arch: arch::MCFISA_A},
    OpCode{name: "wdebug",  size: 4, opcode: two(0175750, 03), mask: two(0177770, 0xffff), args: "ds", arch: arch::MCFISA_A},
];
